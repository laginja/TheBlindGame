// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Public/AkAudioDevice.h"
#include "GeneratedCppIncludes.h"
#include "AkAudio.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1AkAudio() {}
FName AKAUDIO_GetAttenuationRadius = FName(TEXT("GetAttenuationRadius"));
FName AKAUDIO_SetActiveListeners = FName(TEXT("SetActiveListeners"));
FName AKAUDIO_SetAttenuationScalingFactor = FName(TEXT("SetAttenuationScalingFactor"));
FName AKAUDIO_UpdateGameObjectPosition = FName(TEXT("UpdateGameObjectPosition"));
class UScriptStruct* FAkAmbSoundCheckpointRecord::StaticStruct()
{
	extern AKAUDIO_API class UPackage* Z_Construct_UPackage__Script_AkAudio();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AKAUDIO_API class UScriptStruct* Z_Construct_UScriptStruct_FAkAmbSoundCheckpointRecord();
		extern AKAUDIO_API uint32 Get_Z_Construct_UScriptStruct_FAkAmbSoundCheckpointRecord_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAkAmbSoundCheckpointRecord, Z_Construct_UPackage__Script_AkAudio(), TEXT("AkAmbSoundCheckpointRecord"), sizeof(FAkAmbSoundCheckpointRecord), Get_Z_Construct_UScriptStruct_FAkAmbSoundCheckpointRecord_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAkAmbSoundCheckpointRecord(FAkAmbSoundCheckpointRecord::StaticStruct, TEXT("/Script/AkAudio"), TEXT("AkAmbSoundCheckpointRecord"), false, nullptr, nullptr);
static struct FScriptStruct_AkAudio_StaticRegisterNativesFAkAmbSoundCheckpointRecord
{
	FScriptStruct_AkAudio_StaticRegisterNativesFAkAmbSoundCheckpointRecord()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AkAmbSoundCheckpointRecord")),new UScriptStruct::TCppStructOps<FAkAmbSoundCheckpointRecord>);
	}
} ScriptStruct_AkAudio_StaticRegisterNativesFAkAmbSoundCheckpointRecord;
	void AAkAmbientSound::StaticRegisterNativesAAkAmbientSound()
	{
		FNativeFunctionRegistrar::RegisterFunction(AAkAmbientSound::StaticClass(), "StartAmbientSound",(Native)&AAkAmbientSound::execStartAmbientSound);
		FNativeFunctionRegistrar::RegisterFunction(AAkAmbientSound::StaticClass(), "StopAmbientSound",(Native)&AAkAmbientSound::execStopAmbientSound);
	}
	IMPLEMENT_CLASS(AAkAmbientSound, 945926418);
	void UAkAudioBank::StaticRegisterNativesUAkAudioBank()
	{
	}
	IMPLEMENT_CLASS(UAkAudioBank, 3254432913);
	void UAkAudioEvent::StaticRegisterNativesUAkAudioEvent()
	{
	}
	IMPLEMENT_CLASS(UAkAudioEvent, 3264452791);
	void UAkAuxBus::StaticRegisterNativesUAkAuxBus()
	{
	}
	IMPLEMENT_CLASS(UAkAuxBus, 1483772189);
	float UAkComponent::GetAttenuationRadius() const
	{
		AkComponent_eventGetAttenuationRadius_Parms Parms;
		const_cast<UAkComponent*>(this)->ProcessEvent(FindFunctionChecked(AKAUDIO_GetAttenuationRadius),&Parms);
		return Parms.ReturnValue;
	}
	void UAkComponent::SetActiveListeners(int32 in_uListenerMask)
	{
		AkComponent_eventSetActiveListeners_Parms Parms;
		Parms.in_uListenerMask=in_uListenerMask;
		ProcessEvent(FindFunctionChecked(AKAUDIO_SetActiveListeners),&Parms);
	}
	void UAkComponent::SetAttenuationScalingFactor(float Value)
	{
		AkComponent_eventSetAttenuationScalingFactor_Parms Parms;
		Parms.Value=Value;
		ProcessEvent(FindFunctionChecked(AKAUDIO_SetAttenuationScalingFactor),&Parms);
	}
	void UAkComponent::UpdateGameObjectPosition()
	{
		ProcessEvent(FindFunctionChecked(AKAUDIO_UpdateGameObjectPosition),NULL);
	}
	void UAkComponent::StaticRegisterNativesUAkComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UAkComponent::StaticClass(), "GetAttenuationRadius",(Native)&UAkComponent::execGetAttenuationRadius);
		FNativeFunctionRegistrar::RegisterFunction(UAkComponent::StaticClass(), "PostAkEvent",(Native)&UAkComponent::execPostAkEvent);
		FNativeFunctionRegistrar::RegisterFunction(UAkComponent::StaticClass(), "PostAkEventByName",(Native)&UAkComponent::execPostAkEventByName);
		FNativeFunctionRegistrar::RegisterFunction(UAkComponent::StaticClass(), "PostAssociatedAkEvent",(Native)&UAkComponent::execPostAssociatedAkEvent);
		FNativeFunctionRegistrar::RegisterFunction(UAkComponent::StaticClass(), "PostTrigger",(Native)&UAkComponent::execPostTrigger);
		FNativeFunctionRegistrar::RegisterFunction(UAkComponent::StaticClass(), "SetActiveListeners",(Native)&UAkComponent::execSetActiveListeners);
		FNativeFunctionRegistrar::RegisterFunction(UAkComponent::StaticClass(), "SetAttenuationScalingFactor",(Native)&UAkComponent::execSetAttenuationScalingFactor);
		FNativeFunctionRegistrar::RegisterFunction(UAkComponent::StaticClass(), "SetOutputBusVolume",(Native)&UAkComponent::execSetOutputBusVolume);
		FNativeFunctionRegistrar::RegisterFunction(UAkComponent::StaticClass(), "SetRTPCValue",(Native)&UAkComponent::execSetRTPCValue);
		FNativeFunctionRegistrar::RegisterFunction(UAkComponent::StaticClass(), "SetStopWhenOwnerDestroyed",(Native)&UAkComponent::execSetStopWhenOwnerDestroyed);
		FNativeFunctionRegistrar::RegisterFunction(UAkComponent::StaticClass(), "SetSwitch",(Native)&UAkComponent::execSetSwitch);
		FNativeFunctionRegistrar::RegisterFunction(UAkComponent::StaticClass(), "Stop",(Native)&UAkComponent::execStop);
		FNativeFunctionRegistrar::RegisterFunction(UAkComponent::StaticClass(), "UpdateGameObjectPosition",(Native)&UAkComponent::execUpdateGameObjectPosition);
		FNativeFunctionRegistrar::RegisterFunction(UAkComponent::StaticClass(), "UseReverbVolumes",(Native)&UAkComponent::execUseReverbVolumes);
	}
	IMPLEMENT_CLASS(UAkComponent, 1193890131);
	void UAkGameplayStatics::StaticRegisterNativesUAkGameplayStatics()
	{
		FNativeFunctionRegistrar::RegisterFunction(UAkGameplayStatics::StaticClass(), "AddOutputCaptureMarker",(Native)&UAkGameplayStatics::execAddOutputCaptureMarker);
		FNativeFunctionRegistrar::RegisterFunction(UAkGameplayStatics::StaticClass(), "ClearBanks",(Native)&UAkGameplayStatics::execClearBanks);
		FNativeFunctionRegistrar::RegisterFunction(UAkGameplayStatics::StaticClass(), "GetAkComponent",(Native)&UAkGameplayStatics::execGetAkComponent);
		FNativeFunctionRegistrar::RegisterFunction(UAkGameplayStatics::StaticClass(), "LoadBank",(Native)&UAkGameplayStatics::execLoadBank);
		FNativeFunctionRegistrar::RegisterFunction(UAkGameplayStatics::StaticClass(), "LoadBankByName",(Native)&UAkGameplayStatics::execLoadBankByName);
		FNativeFunctionRegistrar::RegisterFunction(UAkGameplayStatics::StaticClass(), "LoadBanks",(Native)&UAkGameplayStatics::execLoadBanks);
		FNativeFunctionRegistrar::RegisterFunction(UAkGameplayStatics::StaticClass(), "LoadInitBank",(Native)&UAkGameplayStatics::execLoadInitBank);
		FNativeFunctionRegistrar::RegisterFunction(UAkGameplayStatics::StaticClass(), "PostEvent",(Native)&UAkGameplayStatics::execPostEvent);
		FNativeFunctionRegistrar::RegisterFunction(UAkGameplayStatics::StaticClass(), "PostEventAtLocation",(Native)&UAkGameplayStatics::execPostEventAtLocation);
		FNativeFunctionRegistrar::RegisterFunction(UAkGameplayStatics::StaticClass(), "PostEventAtLocationByName",(Native)&UAkGameplayStatics::execPostEventAtLocationByName);
		FNativeFunctionRegistrar::RegisterFunction(UAkGameplayStatics::StaticClass(), "PostEventAttached",(Native)&UAkGameplayStatics::execPostEventAttached);
		FNativeFunctionRegistrar::RegisterFunction(UAkGameplayStatics::StaticClass(), "PostEventByName",(Native)&UAkGameplayStatics::execPostEventByName);
		FNativeFunctionRegistrar::RegisterFunction(UAkGameplayStatics::StaticClass(), "PostTrigger",(Native)&UAkGameplayStatics::execPostTrigger);
		FNativeFunctionRegistrar::RegisterFunction(UAkGameplayStatics::StaticClass(), "SetOcclusionRefreshInterval",(Native)&UAkGameplayStatics::execSetOcclusionRefreshInterval);
		FNativeFunctionRegistrar::RegisterFunction(UAkGameplayStatics::StaticClass(), "SetOutputBusVolume",(Native)&UAkGameplayStatics::execSetOutputBusVolume);
		FNativeFunctionRegistrar::RegisterFunction(UAkGameplayStatics::StaticClass(), "SetRTPCValue",(Native)&UAkGameplayStatics::execSetRTPCValue);
		FNativeFunctionRegistrar::RegisterFunction(UAkGameplayStatics::StaticClass(), "SetState",(Native)&UAkGameplayStatics::execSetState);
		FNativeFunctionRegistrar::RegisterFunction(UAkGameplayStatics::StaticClass(), "SetSwitch",(Native)&UAkGameplayStatics::execSetSwitch);
		FNativeFunctionRegistrar::RegisterFunction(UAkGameplayStatics::StaticClass(), "SpawnAkComponentAtLocation",(Native)&UAkGameplayStatics::execSpawnAkComponentAtLocation);
		FNativeFunctionRegistrar::RegisterFunction(UAkGameplayStatics::StaticClass(), "StartAllAmbientSounds",(Native)&UAkGameplayStatics::execStartAllAmbientSounds);
		FNativeFunctionRegistrar::RegisterFunction(UAkGameplayStatics::StaticClass(), "StartOutputCapture",(Native)&UAkGameplayStatics::execStartOutputCapture);
		FNativeFunctionRegistrar::RegisterFunction(UAkGameplayStatics::StaticClass(), "StartProfilerCapture",(Native)&UAkGameplayStatics::execStartProfilerCapture);
		FNativeFunctionRegistrar::RegisterFunction(UAkGameplayStatics::StaticClass(), "StopActor",(Native)&UAkGameplayStatics::execStopActor);
		FNativeFunctionRegistrar::RegisterFunction(UAkGameplayStatics::StaticClass(), "StopAll",(Native)&UAkGameplayStatics::execStopAll);
		FNativeFunctionRegistrar::RegisterFunction(UAkGameplayStatics::StaticClass(), "StopAllAmbientSounds",(Native)&UAkGameplayStatics::execStopAllAmbientSounds);
		FNativeFunctionRegistrar::RegisterFunction(UAkGameplayStatics::StaticClass(), "StopOutputCapture",(Native)&UAkGameplayStatics::execStopOutputCapture);
		FNativeFunctionRegistrar::RegisterFunction(UAkGameplayStatics::StaticClass(), "StopProfilerCapture",(Native)&UAkGameplayStatics::execStopProfilerCapture);
		FNativeFunctionRegistrar::RegisterFunction(UAkGameplayStatics::StaticClass(), "UnloadBank",(Native)&UAkGameplayStatics::execUnloadBank);
		FNativeFunctionRegistrar::RegisterFunction(UAkGameplayStatics::StaticClass(), "UnloadBankByName",(Native)&UAkGameplayStatics::execUnloadBankByName);
		FNativeFunctionRegistrar::RegisterFunction(UAkGameplayStatics::StaticClass(), "UseReverbVolumes",(Native)&UAkGameplayStatics::execUseReverbVolumes);
	}
	IMPLEMENT_CLASS(UAkGameplayStatics, 3017597450);
	void AAkReverbVolume::StaticRegisterNativesAAkReverbVolume()
	{
	}
	IMPLEMENT_CLASS(AAkReverbVolume, 1090447766);
	void UAkSettings::StaticRegisterNativesUAkSettings()
	{
	}
	IMPLEMENT_CLASS(UAkSettings, 1956403485);
class UScriptStruct* FAkAudioEventTrackKey::StaticStruct()
{
	extern AKAUDIO_API class UPackage* Z_Construct_UPackage__Script_AkAudio();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern AKAUDIO_API class UScriptStruct* Z_Construct_UScriptStruct_FAkAudioEventTrackKey();
		extern AKAUDIO_API uint32 Get_Z_Construct_UScriptStruct_FAkAudioEventTrackKey_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAkAudioEventTrackKey, Z_Construct_UPackage__Script_AkAudio(), TEXT("AkAudioEventTrackKey"), sizeof(FAkAudioEventTrackKey), Get_Z_Construct_UScriptStruct_FAkAudioEventTrackKey_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAkAudioEventTrackKey(FAkAudioEventTrackKey::StaticStruct, TEXT("/Script/AkAudio"), TEXT("AkAudioEventTrackKey"), false, nullptr, nullptr);
static struct FScriptStruct_AkAudio_StaticRegisterNativesFAkAudioEventTrackKey
{
	FScriptStruct_AkAudio_StaticRegisterNativesFAkAudioEventTrackKey()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AkAudioEventTrackKey")),new UScriptStruct::TCppStructOps<FAkAudioEventTrackKey>);
	}
} ScriptStruct_AkAudio_StaticRegisterNativesFAkAudioEventTrackKey;
	void UInterpTrackAkAudioEvent::StaticRegisterNativesUInterpTrackAkAudioEvent()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackAkAudioEvent, 1616524445);
	void UInterpTrackAkAudioRTPC::StaticRegisterNativesUInterpTrackAkAudioRTPC()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackAkAudioRTPC, 3709000144);
	void UInterpTrackInstAkAudioEvent::StaticRegisterNativesUInterpTrackInstAkAudioEvent()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackInstAkAudioEvent, 3422371556);
	void UInterpTrackInstAkAudioRTPC::StaticRegisterNativesUInterpTrackInstAkAudioRTPC()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackInstAkAudioRTPC, 1583766770);
	void UMovieSceneAkAudioEventSection::StaticRegisterNativesUMovieSceneAkAudioEventSection()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneAkAudioEventSection, 3440013610);
	void UMovieSceneAkAudioRTPCSection::StaticRegisterNativesUMovieSceneAkAudioRTPCSection()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneAkAudioRTPCSection, 977492746);
	void UMovieSceneAkTrack::StaticRegisterNativesUMovieSceneAkTrack()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneAkTrack, 2590219518);
	void UMovieSceneAkAudioEventTrack::StaticRegisterNativesUMovieSceneAkAudioEventTrack()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneAkAudioEventTrack, 1598155464);
	void UMovieSceneAkAudioRTPCTrack::StaticRegisterNativesUMovieSceneAkAudioRTPCTrack()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneAkAudioRTPCTrack, 3574082128);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject();
	ENGINE_API class UClass* Z_Construct_UClass_USceneComponent();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAttachLocation();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector();
	ENGINE_API class UClass* Z_Construct_UClass_USceneComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AActor_NoRegister();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FRotator();
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintFunctionLibrary();
	ENGINE_API class UClass* Z_Construct_UClass_AVolume();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFilePath();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDirectoryPath();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackVectorBase();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackFloatBase();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInst();
	MOVIESCENE_API class UClass* Z_Construct_UClass_UMovieSceneSection();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRichCurve();
	MOVIESCENE_API class UClass* Z_Construct_UClass_UMovieSceneTrack();
	MOVIESCENE_API class UClass* Z_Construct_UClass_UMovieSceneSection_NoRegister();

	AKAUDIO_API class UScriptStruct* Z_Construct_UScriptStruct_FAkAmbSoundCheckpointRecord();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_AAkAmbientSound_StartAmbientSound();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_AAkAmbientSound_StopAmbientSound();
	AKAUDIO_API class UClass* Z_Construct_UClass_AAkAmbientSound_NoRegister();
	AKAUDIO_API class UClass* Z_Construct_UClass_AAkAmbientSound();
	AKAUDIO_API class UClass* Z_Construct_UClass_UAkAudioBank_NoRegister();
	AKAUDIO_API class UClass* Z_Construct_UClass_UAkAudioBank();
	AKAUDIO_API class UClass* Z_Construct_UClass_UAkAudioEvent_NoRegister();
	AKAUDIO_API class UClass* Z_Construct_UClass_UAkAudioEvent();
	AKAUDIO_API class UClass* Z_Construct_UClass_UAkAuxBus_NoRegister();
	AKAUDIO_API class UClass* Z_Construct_UClass_UAkAuxBus();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkComponent_GetAttenuationRadius();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkComponent_PostAkEvent();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkComponent_PostAkEventByName();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkComponent_PostAssociatedAkEvent();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkComponent_PostTrigger();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkComponent_SetActiveListeners();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkComponent_SetAttenuationScalingFactor();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkComponent_SetOutputBusVolume();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkComponent_SetRTPCValue();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkComponent_SetStopWhenOwnerDestroyed();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkComponent_SetSwitch();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkComponent_Stop();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkComponent_UpdateGameObjectPosition();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkComponent_UseReverbVolumes();
	AKAUDIO_API class UClass* Z_Construct_UClass_UAkComponent_NoRegister();
	AKAUDIO_API class UClass* Z_Construct_UClass_UAkComponent();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkGameplayStatics_AddOutputCaptureMarker();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkGameplayStatics_ClearBanks();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkGameplayStatics_GetAkComponent();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkGameplayStatics_LoadBank();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkGameplayStatics_LoadBankByName();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkGameplayStatics_LoadBanks();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkGameplayStatics_LoadInitBank();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkGameplayStatics_PostEvent();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkGameplayStatics_PostEventAtLocation();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkGameplayStatics_PostEventAtLocationByName();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkGameplayStatics_PostEventAttached();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkGameplayStatics_PostEventByName();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkGameplayStatics_PostTrigger();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkGameplayStatics_SetOcclusionRefreshInterval();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkGameplayStatics_SetOutputBusVolume();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkGameplayStatics_SetRTPCValue();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkGameplayStatics_SetState();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkGameplayStatics_SetSwitch();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkGameplayStatics_SpawnAkComponentAtLocation();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkGameplayStatics_StartAllAmbientSounds();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkGameplayStatics_StartOutputCapture();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkGameplayStatics_StartProfilerCapture();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkGameplayStatics_StopActor();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkGameplayStatics_StopAll();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkGameplayStatics_StopAllAmbientSounds();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkGameplayStatics_StopOutputCapture();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkGameplayStatics_StopProfilerCapture();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkGameplayStatics_UnloadBank();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkGameplayStatics_UnloadBankByName();
	AKAUDIO_API class UFunction* Z_Construct_UFunction_UAkGameplayStatics_UseReverbVolumes();
	AKAUDIO_API class UClass* Z_Construct_UClass_UAkGameplayStatics_NoRegister();
	AKAUDIO_API class UClass* Z_Construct_UClass_UAkGameplayStatics();
	AKAUDIO_API class UClass* Z_Construct_UClass_AAkReverbVolume_NoRegister();
	AKAUDIO_API class UClass* Z_Construct_UClass_AAkReverbVolume();
	AKAUDIO_API class UClass* Z_Construct_UClass_UAkSettings_NoRegister();
	AKAUDIO_API class UClass* Z_Construct_UClass_UAkSettings();
	AKAUDIO_API class UScriptStruct* Z_Construct_UScriptStruct_FAkAudioEventTrackKey();
	AKAUDIO_API class UClass* Z_Construct_UClass_UInterpTrackAkAudioEvent_NoRegister();
	AKAUDIO_API class UClass* Z_Construct_UClass_UInterpTrackAkAudioEvent();
	AKAUDIO_API class UClass* Z_Construct_UClass_UInterpTrackAkAudioRTPC_NoRegister();
	AKAUDIO_API class UClass* Z_Construct_UClass_UInterpTrackAkAudioRTPC();
	AKAUDIO_API class UClass* Z_Construct_UClass_UInterpTrackInstAkAudioEvent_NoRegister();
	AKAUDIO_API class UClass* Z_Construct_UClass_UInterpTrackInstAkAudioEvent();
	AKAUDIO_API class UClass* Z_Construct_UClass_UInterpTrackInstAkAudioRTPC_NoRegister();
	AKAUDIO_API class UClass* Z_Construct_UClass_UInterpTrackInstAkAudioRTPC();
	AKAUDIO_API class UClass* Z_Construct_UClass_UMovieSceneAkAudioEventSection_NoRegister();
	AKAUDIO_API class UClass* Z_Construct_UClass_UMovieSceneAkAudioEventSection();
	AKAUDIO_API class UClass* Z_Construct_UClass_UMovieSceneAkAudioRTPCSection_NoRegister();
	AKAUDIO_API class UClass* Z_Construct_UClass_UMovieSceneAkAudioRTPCSection();
	AKAUDIO_API class UClass* Z_Construct_UClass_UMovieSceneAkTrack_NoRegister();
	AKAUDIO_API class UClass* Z_Construct_UClass_UMovieSceneAkTrack();
	AKAUDIO_API class UClass* Z_Construct_UClass_UMovieSceneAkAudioEventTrack_NoRegister();
	AKAUDIO_API class UClass* Z_Construct_UClass_UMovieSceneAkAudioEventTrack();
	AKAUDIO_API class UClass* Z_Construct_UClass_UMovieSceneAkAudioRTPCTrack_NoRegister();
	AKAUDIO_API class UClass* Z_Construct_UClass_UMovieSceneAkAudioRTPCTrack();
	AKAUDIO_API class UPackage* Z_Construct_UPackage__Script_AkAudio();
	UScriptStruct* Z_Construct_UScriptStruct_FAkAmbSoundCheckpointRecord()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_AkAudio();
		extern uint32 Get_Z_Construct_UScriptStruct_FAkAmbSoundCheckpointRecord_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("AkAmbSoundCheckpointRecord"), sizeof(FAkAmbSoundCheckpointRecord), Get_Z_Construct_UScriptStruct_FAkAmbSoundCheckpointRecord_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AkAmbSoundCheckpointRecord"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FAkAmbSoundCheckpointRecord>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCurrentlyPlaying, FAkAmbSoundCheckpointRecord, bool);
			UProperty* NewProp_bCurrentlyPlaying = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bCurrentlyPlaying"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCurrentlyPlaying, FAkAmbSoundCheckpointRecord), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bCurrentlyPlaying, FAkAmbSoundCheckpointRecord), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/AkAmbientSound.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("FAkAmbSoundCheckpointRecord"));
			MetaData->SetValue(NewProp_bCurrentlyPlaying, TEXT("ModuleRelativePath"), TEXT("Classes/AkAmbientSound.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAkAmbSoundCheckpointRecord_CRC() { return 2091296785U; }
	UFunction* Z_Construct_UFunction_AAkAmbientSound_StartAmbientSound()
	{
		UObject* Outer=Z_Construct_UClass_AAkAmbientSound();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("StartAmbientSound"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|AkAmbientSound"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkAmbientSound.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("* Start an Ak ambient sound."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AAkAmbientSound_StopAmbientSound()
	{
		UObject* Outer=Z_Construct_UClass_AAkAmbientSound();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("StopAmbientSound"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|AkAmbientSound"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkAmbientSound.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("* Stop an Ak ambient sound."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AAkAmbientSound_NoRegister()
	{
		return AAkAmbientSound::StaticClass();
	}
	UClass* Z_Construct_UClass_AAkAmbientSound()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_AkAudio();
			OuterClass = AAkAmbientSound::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_AAkAmbientSound_StartAmbientSound());
				OuterClass->LinkChild(Z_Construct_UFunction_AAkAmbientSound_StopAmbientSound());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(StopWhenOwnerIsDestroyed, AAkAmbientSound, bool);
				UProperty* NewProp_StopWhenOwnerIsDestroyed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StopWhenOwnerIsDestroyed"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(StopWhenOwnerIsDestroyed, AAkAmbientSound), 0x0010020000000005, CPP_BOOL_PROPERTY_BITMASK(StopWhenOwnerIsDestroyed, AAkAmbientSound), sizeof(bool), true);
				UProperty* NewProp_AkComponent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AkComponent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(AkComponent, AAkAmbientSound), 0x00100000000a001d, Z_Construct_UClass_UAkComponent_NoRegister());
				UProperty* NewProp_AkAudioEvent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AkAudioEvent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(AkAudioEvent_DEPRECATED, AAkAmbientSound), 0x0010000020000000, Z_Construct_UClass_UAkAudioEvent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AAkAmbientSound_StartAmbientSound(), "StartAmbientSound"); // 12131883
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AAkAmbientSound_StopAmbientSound(), "StopAmbientSound"); // 2099597266
				OuterClass->ClassConfigName = FName(TEXT("Engine"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("AkAmbientSound"));
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Audio"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AkAmbientSound.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AkAmbientSound.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("AAkAmbientSound"));
				MetaData->SetValue(NewProp_StopWhenOwnerIsDestroyed, TEXT("Category"), TEXT("AkAmbientSound"));
				MetaData->SetValue(NewProp_StopWhenOwnerIsDestroyed, TEXT("ModuleRelativePath"), TEXT("Classes/AkAmbientSound.h"));
				MetaData->SetValue(NewProp_StopWhenOwnerIsDestroyed, TEXT("ToolTip"), TEXT("Stop playback if the owner is destroyed"));
				MetaData->SetValue(NewProp_AkComponent, TEXT("Category"), TEXT("AkAmbientSound"));
				MetaData->SetValue(NewProp_AkComponent, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_AkComponent, TEXT("ModuleRelativePath"), TEXT("Classes/AkAmbientSound.h"));
				MetaData->SetValue(NewProp_AkComponent, TEXT("ShowOnlyInnerProperties"), TEXT(""));
				MetaData->SetValue(NewProp_AkComponent, TEXT("ToolTip"), TEXT("AkComponent to handle playback"));
				MetaData->SetValue(NewProp_AkAudioEvent, TEXT("ModuleRelativePath"), TEXT("Classes/AkAmbientSound.h"));
				MetaData->SetValue(NewProp_AkAudioEvent, TEXT("ToolTip"), TEXT("AkAudioEvent to play. Deprecated as UE4.7 integration: Use AkComponent->AkAudioEvent instead"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AAkAmbientSound(Z_Construct_UClass_AAkAmbientSound, &AAkAmbientSound::StaticClass, TEXT("AAkAmbientSound"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AAkAmbientSound);
	UClass* Z_Construct_UClass_UAkAudioBank_NoRegister()
	{
		return UAkAudioBank::StaticClass();
	}
	UClass* Z_Construct_UClass_UAkAudioBank()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_AkAudio();
			OuterClass = UAkAudioBank::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(AutoLoad, UAkAudioBank, bool);
				UProperty* NewProp_AutoLoad = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AutoLoad"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(AutoLoad, UAkAudioBank), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(AutoLoad, UAkAudioBank), sizeof(bool), true);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AkAudioBank.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AkAudioBank.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("UAkAudioBank"));
				MetaData->SetValue(NewProp_AutoLoad, TEXT("Category"), TEXT("Behaviour"));
				MetaData->SetValue(NewProp_AutoLoad, TEXT("ModuleRelativePath"), TEXT("Classes/AkAudioBank.h"));
				MetaData->SetValue(NewProp_AutoLoad, TEXT("ToolTip"), TEXT("Auto-load bank when its package is accessed for the first time"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAkAudioBank(Z_Construct_UClass_UAkAudioBank, &UAkAudioBank::StaticClass, TEXT("UAkAudioBank"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAkAudioBank);
	UClass* Z_Construct_UClass_UAkAudioEvent_NoRegister()
	{
		return UAkAudioEvent::StaticClass();
	}
	UClass* Z_Construct_UClass_UAkAudioEvent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_AkAudio();
			OuterClass = UAkAudioEvent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_MaximumDuration = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaximumDuration"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaximumDuration, UAkAudioEvent), 0x0010000000000014);
				UProperty* NewProp_MinimumDuration = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MinimumDuration"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MinimumDuration, UAkAudioEvent), 0x0010000000000014);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsInfinite, UAkAudioEvent, bool);
				UProperty* NewProp_IsInfinite = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("IsInfinite"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsInfinite, UAkAudioEvent), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(IsInfinite, UAkAudioEvent), sizeof(bool), true);
				UProperty* NewProp_MaxAttenuationRadius = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxAttenuationRadius"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxAttenuationRadius, UAkAudioEvent), 0x0010000000000014);
				UProperty* NewProp_RequiredBank = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RequiredBank"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(RequiredBank, UAkAudioEvent), 0x0010000000000005, Z_Construct_UClass_UAkAudioBank_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AkAudioEvent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AkAudioEvent.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("UAkAudioEvent"));
				MetaData->SetValue(NewProp_MaximumDuration, TEXT("Category"), TEXT("AkAudioEvent"));
				MetaData->SetValue(NewProp_MaximumDuration, TEXT("ModuleRelativePath"), TEXT("Classes/AkAudioEvent.h"));
				MetaData->SetValue(NewProp_MaximumDuration, TEXT("ToolTip"), TEXT("Maximum duration"));
				MetaData->SetValue(NewProp_MinimumDuration, TEXT("Category"), TEXT("AkAudioEvent"));
				MetaData->SetValue(NewProp_MinimumDuration, TEXT("ModuleRelativePath"), TEXT("Classes/AkAudioEvent.h"));
				MetaData->SetValue(NewProp_MinimumDuration, TEXT("ToolTip"), TEXT("Minimum duration"));
				MetaData->SetValue(NewProp_IsInfinite, TEXT("Category"), TEXT("AkAudioEvent"));
				MetaData->SetValue(NewProp_IsInfinite, TEXT("ModuleRelativePath"), TEXT("Classes/AkAudioEvent.h"));
				MetaData->SetValue(NewProp_IsInfinite, TEXT("ToolTip"), TEXT("Whether this event is infinite (looping) or finite (duration parameters are valid)"));
				MetaData->SetValue(NewProp_MaxAttenuationRadius, TEXT("Category"), TEXT("AkAudioEvent"));
				MetaData->SetValue(NewProp_MaxAttenuationRadius, TEXT("ModuleRelativePath"), TEXT("Classes/AkAudioEvent.h"));
				MetaData->SetValue(NewProp_MaxAttenuationRadius, TEXT("ToolTip"), TEXT("Maximum attenuation radius for this event"));
				MetaData->SetValue(NewProp_RequiredBank, TEXT("Category"), TEXT("Bank"));
				MetaData->SetValue(NewProp_RequiredBank, TEXT("ModuleRelativePath"), TEXT("Classes/AkAudioEvent.h"));
				MetaData->SetValue(NewProp_RequiredBank, TEXT("ToolTip"), TEXT("Bank to which this event should be added."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAkAudioEvent(Z_Construct_UClass_UAkAudioEvent, &UAkAudioEvent::StaticClass, TEXT("UAkAudioEvent"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAkAudioEvent);
	UClass* Z_Construct_UClass_UAkAuxBus_NoRegister()
	{
		return UAkAuxBus::StaticClass();
	}
	UClass* Z_Construct_UClass_UAkAuxBus()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_AkAudio();
			OuterClass = UAkAuxBus::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_RequiredBank = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RequiredBank"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(RequiredBank, UAkAuxBus), 0x0010000000000005, Z_Construct_UClass_UAkAudioBank_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Advanced Attachment Volume"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AkAuxBus.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AkAuxBus.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("AAkAuxBus"));
				MetaData->SetValue(NewProp_RequiredBank, TEXT("Category"), TEXT("Bank"));
				MetaData->SetValue(NewProp_RequiredBank, TEXT("ModuleRelativePath"), TEXT("Classes/AkAuxBus.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAkAuxBus(Z_Construct_UClass_UAkAuxBus, &UAkAuxBus::StaticClass, TEXT("UAkAuxBus"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAkAuxBus);
	UFunction* Z_Construct_UFunction_UAkComponent_GetAttenuationRadius()
	{
		UObject* Outer=Z_Construct_UClass_UAkComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetAttenuationRadius"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x5C020C00, 65535, sizeof(AkComponent_eventGetAttenuationRadius_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, AkComponent_eventGetAttenuationRadius_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|AkComponent"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Return the real attenuation radius for this component (AttenuationScalingFactor * AkAudioEvent->MaxAttenuationRadius)"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkComponent_PostAkEvent()
	{
		struct AkComponent_eventPostAkEvent_Parms
		{
			UAkAudioEvent* AkEvent;
			FString in_EventName;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAkComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PostAkEvent"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(AkComponent_eventPostAkEvent_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, AkComponent_eventPostAkEvent_Parms), 0x0010000000000580);
			UProperty* NewProp_in_EventName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("in_EventName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(in_EventName, AkComponent_eventPostAkEvent_Parms), 0x0010040000000080);
			UProperty* NewProp_AkEvent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AkEvent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(AkEvent, AkComponent_eventPostAkEvent_Parms), 0x0010000000000080, Z_Construct_UClass_UAkAudioEvent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("AdvancedDisplay"), TEXT("1"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|AkComponent"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Posts an event to Wwise, using this component as the game object source\n\n@param AkEvent               The event to post"));
			MetaData->SetValue(NewProp_in_EventName, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkComponent_PostAkEventByName()
	{
		struct AkComponent_eventPostAkEventByName_Parms
		{
			FString in_EventName;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAkComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PostAkEventByName"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(AkComponent_eventPostAkEventByName_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, AkComponent_eventPostAkEventByName_Parms), 0x0010000000000580);
			UProperty* NewProp_in_EventName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("in_EventName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(in_EventName, AkComponent_eventPostAkEventByName_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|AkComponent"));
			MetaData->SetValue(ReturnFunction, TEXT("DeprecatedFunction"), TEXT(""));
			MetaData->SetValue(ReturnFunction, TEXT("DeprecationMessage"), TEXT("Please use the \"Event Name\" field of Post Ak Event"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Posts an event to Wwise using its name, using this component as the game object source\n\n@param AkEvent               The event to post"));
			MetaData->SetValue(NewProp_in_EventName, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkComponent_PostAssociatedAkEvent()
	{
		struct AkComponent_eventPostAssociatedAkEvent_Parms
		{
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAkComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PostAssociatedAkEvent"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(AkComponent_eventPostAssociatedAkEvent_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, AkComponent_eventPostAssociatedAkEvent_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|AkComponent"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Posts this component's AkAudioEvent to Wwise, using this component as the game object source"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkComponent_PostTrigger()
	{
		struct AkComponent_eventPostTrigger_Parms
		{
			FString Trigger;
		};
		UObject* Outer=Z_Construct_UClass_UAkComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PostTrigger"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(AkComponent_eventPostTrigger_Parms));
			UProperty* NewProp_Trigger = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Trigger"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Trigger, AkComponent_eventPostTrigger_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|AkComponent"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Posts a trigger to wwise, using this component as the game object source\n\n@param Trigger               The name of the trigger"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkComponent_SetActiveListeners()
	{
		UObject* Outer=Z_Construct_UClass_UAkComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetActiveListeners"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x0C020C00, 65535, sizeof(AkComponent_eventSetActiveListeners_Parms));
			UProperty* NewProp_in_uListenerMask = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("in_uListenerMask"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(in_uListenerMask, AkComponent_eventSetActiveListeners_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|AkComponent"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Set a game object's active listeners\n\n@param in_uListenerMask      Bitmask representing the active listeners (LSB = Listener 0, set to 1 means active)"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkComponent_SetAttenuationScalingFactor()
	{
		UObject* Outer=Z_Construct_UClass_UAkComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetAttenuationScalingFactor"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x0C020C00, 65535, sizeof(AkComponent_eventSetAttenuationScalingFactor_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Value, AkComponent_eventSetAttenuationScalingFactor_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|AkComponent"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Sets the attenuation scaling factor, which modifies the attenuation computations on this game object to simulate sounds with a a larger or smaller area of effect."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkComponent_SetOutputBusVolume()
	{
		struct AkComponent_eventSetOutputBusVolume_Parms
		{
			float BusVolume;
		};
		UObject* Outer=Z_Construct_UClass_UAkComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetOutputBusVolume"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(AkComponent_eventSetOutputBusVolume_Parms));
			UProperty* NewProp_BusVolume = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("BusVolume"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BusVolume, AkComponent_eventSetOutputBusVolume_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|AkComponent"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Set the output bus volume (direct) to be used for the specified game object.\nThe control value is a number ranging from 0.0f to 1.0f.\n\n@param BusVolume - Bus volume to set"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkComponent_SetRTPCValue()
	{
		struct AkComponent_eventSetRTPCValue_Parms
		{
			FString RTPC;
			float Value;
			int32 InterpolationTimeMs;
		};
		UObject* Outer=Z_Construct_UClass_UAkComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetRTPCValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(AkComponent_eventSetRTPCValue_Parms));
			UProperty* NewProp_InterpolationTimeMs = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InterpolationTimeMs"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(InterpolationTimeMs, AkComponent_eventSetRTPCValue_Parms), 0x0010000000000080);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Value, AkComponent_eventSetRTPCValue_Parms), 0x0010000000000080);
			UProperty* NewProp_RTPC = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RTPC"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RTPC, AkComponent_eventSetRTPCValue_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|AkComponent"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Sets an RTPC value, using this component as the game object source\n\n@param RTPC                  The name of the RTPC to set\n@param Value                 The value of the RTPC\n@param InterpolationTimeMs - Duration during which the RTPC is interpolated towards Value (in ms)"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkComponent_SetStopWhenOwnerDestroyed()
	{
		struct AkComponent_eventSetStopWhenOwnerDestroyed_Parms
		{
			bool bStopWhenOwnerDestroyed;
		};
		UObject* Outer=Z_Construct_UClass_UAkComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetStopWhenOwnerDestroyed"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(AkComponent_eventSetStopWhenOwnerDestroyed_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bStopWhenOwnerDestroyed, AkComponent_eventSetStopWhenOwnerDestroyed_Parms, bool);
			UProperty* NewProp_bStopWhenOwnerDestroyed = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bStopWhenOwnerDestroyed"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bStopWhenOwnerDestroyed, AkComponent_eventSetStopWhenOwnerDestroyed_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(bStopWhenOwnerDestroyed, AkComponent_eventSetStopWhenOwnerDestroyed_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|AkComponent"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Sets whether or not to stop sounds when the component's owner is destroyed\n\n@param bStopWhenOwnerDestroyed       Whether or not to stop sounds when the component's owner is destroyed"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkComponent_SetSwitch()
	{
		struct AkComponent_eventSetSwitch_Parms
		{
			FString SwitchGroup;
			FString SwitchState;
		};
		UObject* Outer=Z_Construct_UClass_UAkComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetSwitch"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(AkComponent_eventSetSwitch_Parms));
			UProperty* NewProp_SwitchState = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SwitchState"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SwitchState, AkComponent_eventSetSwitch_Parms), 0x0010000000000080);
			UProperty* NewProp_SwitchGroup = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SwitchGroup"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SwitchGroup, AkComponent_eventSetSwitch_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|AkComponent"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Sets a switch group in wwise, using this component as the game object source\n\n@param SwitchGroup   The name of the switch group\n@param SwitchState   The new state of the switch"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkComponent_Stop()
	{
		UObject* Outer=Z_Construct_UClass_UAkComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Stop"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|AkComponent"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Stops playback using this component as the game object to stop"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkComponent_UpdateGameObjectPosition()
	{
		UObject* Outer=Z_Construct_UClass_UAkComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UpdateGameObjectPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020C00, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|AkComponent"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkComponent_UseReverbVolumes()
	{
		struct AkComponent_eventUseReverbVolumes_Parms
		{
			bool inUseReverbVolumes;
		};
		UObject* Outer=Z_Construct_UClass_UAkComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UseReverbVolumes"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(AkComponent_eventUseReverbVolumes_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(inUseReverbVolumes, AkComponent_eventUseReverbVolumes_Parms, bool);
			UProperty* NewProp_inUseReverbVolumes = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("inUseReverbVolumes"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(inUseReverbVolumes, AkComponent_eventUseReverbVolumes_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(inUseReverbVolumes, AkComponent_eventUseReverbVolumes_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|AkComponent"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Set UseReverbVolumes flag. Set value to true to use reverb volumes on this component.\n\n@param inUseReverbVolumes    Whether to use reverb volumes or not."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UAkComponent_NoRegister()
	{
		return UAkComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UAkComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_USceneComponent();
			Z_Construct_UPackage__Script_AkAudio();
			OuterClass = UAkComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00080;

				OuterClass->LinkChild(Z_Construct_UFunction_UAkComponent_GetAttenuationRadius());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkComponent_PostAkEvent());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkComponent_PostAkEventByName());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkComponent_PostAssociatedAkEvent());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkComponent_PostTrigger());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkComponent_SetActiveListeners());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkComponent_SetAttenuationScalingFactor());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkComponent_SetOutputBusVolume());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkComponent_SetRTPCValue());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkComponent_SetStopWhenOwnerDestroyed());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkComponent_SetSwitch());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkComponent_Stop());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkComponent_UpdateGameObjectPosition());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkComponent_UseReverbVolumes());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_EventName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EventName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(EventName, UAkComponent), 0x0010040000000005);
				UProperty* NewProp_AkAudioEvent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AkAudioEvent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(AkAudioEvent, UAkComponent), 0x0010000000000005, Z_Construct_UClass_UAkAudioEvent_NoRegister());
				UProperty* NewProp_OcclusionRefreshInterval = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OcclusionRefreshInterval"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(OcclusionRefreshInterval, UAkComponent), 0x0010000000000005);
				UProperty* NewProp_AttenuationScalingFactor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AttenuationScalingFactor"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(AttenuationScalingFactor, UAkComponent), 0x0010000000000015);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(StopWhenOwnerDestroyed, UAkComponent, bool);
				UProperty* NewProp_StopWhenOwnerDestroyed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StopWhenOwnerDestroyed"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(StopWhenOwnerDestroyed, UAkComponent), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(StopWhenOwnerDestroyed, UAkComponent), sizeof(bool), true);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkComponent_GetAttenuationRadius(), "GetAttenuationRadius"); // 2834917408
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkComponent_PostAkEvent(), "PostAkEvent"); // 2666378055
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkComponent_PostAkEventByName(), "PostAkEventByName"); // 574566146
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkComponent_PostAssociatedAkEvent(), "PostAssociatedAkEvent"); // 3162316819
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkComponent_PostTrigger(), "PostTrigger"); // 3479794600
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkComponent_SetActiveListeners(), "SetActiveListeners"); // 1606716051
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkComponent_SetAttenuationScalingFactor(), "SetAttenuationScalingFactor"); // 3558662304
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkComponent_SetOutputBusVolume(), "SetOutputBusVolume"); // 1631739169
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkComponent_SetRTPCValue(), "SetRTPCValue"); // 4256326816
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkComponent_SetStopWhenOwnerDestroyed(), "SetStopWhenOwnerDestroyed"); // 2235476951
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkComponent_SetSwitch(), "SetSwitch"); // 2468951072
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkComponent_Stop(), "Stop"); // 196218374
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkComponent_UpdateGameObjectPosition(), "UpdateGameObjectPosition"); // 584907796
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkComponent_UseReverbVolumes(), "UseReverbVolumes"); // 3843524774
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("AutoExpandCategories"), TEXT("AkComponent"));
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Audiokinetic"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Transform Rendering Mobility LOD Component Activation Trigger PhysicsVolume"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AkComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AkComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("UAkComponent"));
				MetaData->SetValue(NewProp_EventName, TEXT("Category"), TEXT("AkComponent"));
				MetaData->SetValue(NewProp_EventName, TEXT("ModuleRelativePath"), TEXT("Classes/AkComponent.h"));
				MetaData->SetValue(NewProp_AkAudioEvent, TEXT("Category"), TEXT("AkComponent"));
				MetaData->SetValue(NewProp_AkAudioEvent, TEXT("ModuleRelativePath"), TEXT("Classes/AkComponent.h"));
				MetaData->SetValue(NewProp_AkAudioEvent, TEXT("ToolTip"), TEXT("Modifies the attenuation computations on this game object to simulate sounds with a a larger or smaller area of effect."));
				MetaData->SetValue(NewProp_OcclusionRefreshInterval, TEXT("Category"), TEXT("AkComponent"));
				MetaData->SetValue(NewProp_OcclusionRefreshInterval, TEXT("ModuleRelativePath"), TEXT("Classes/AkComponent.h"));
				MetaData->SetValue(NewProp_OcclusionRefreshInterval, TEXT("ToolTip"), TEXT("Time interval between occlusion/obstruction checks. Set to 0 to disable occlusion on this component."));
				MetaData->SetValue(NewProp_AttenuationScalingFactor, TEXT("Category"), TEXT("AkComponent"));
				MetaData->SetValue(NewProp_AttenuationScalingFactor, TEXT("ModuleRelativePath"), TEXT("Classes/AkComponent.h"));
				MetaData->SetValue(NewProp_AttenuationScalingFactor, TEXT("ToolTip"), TEXT("Modifies the attenuation computations on this game object to simulate sounds with a a larger or smaller area of effect."));
				MetaData->SetValue(NewProp_StopWhenOwnerDestroyed, TEXT("ModuleRelativePath"), TEXT("Classes/AkComponent.h"));
				MetaData->SetValue(NewProp_StopWhenOwnerDestroyed, TEXT("ToolTip"), TEXT("Stop sound when owner is destroyed?"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAkComponent(Z_Construct_UClass_UAkComponent, &UAkComponent::StaticClass, TEXT("UAkComponent"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAkComponent);
	UFunction* Z_Construct_UFunction_UAkGameplayStatics_AddOutputCaptureMarker()
	{
		struct AkGameplayStatics_eventAddOutputCaptureMarker_Parms
		{
			FString MarkerText;
		};
		UObject* Outer=Z_Construct_UClass_UAkGameplayStatics();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AddOutputCaptureMarker"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AkGameplayStatics_eventAddOutputCaptureMarker_Parms));
			UProperty* NewProp_MarkerText = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MarkerText"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MarkerText, AkGameplayStatics_eventAddOutputCaptureMarker_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|Debug"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkGameplayStatics.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Add text marker in output capture file.\n@param MarkerText - The name text to put in the marker."));
			MetaData->SetValue(NewProp_MarkerText, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkGameplayStatics_ClearBanks()
	{
		UObject* Outer=Z_Construct_UClass_UAkGameplayStatics();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ClearBanks"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|SoundBanks"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkGameplayStatics.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Clear all loaded banks"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkGameplayStatics_GetAkComponent()
	{
		struct AkGameplayStatics_eventGetAkComponent_Parms
		{
			USceneComponent* AttachToComponent;
			FName AttachPointName;
			FVector Location;
			TEnumAsByte<EAttachLocation::Type> LocationType;
			UAkComponent* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAkGameplayStatics();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetAkComponent"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04822401, 65535, sizeof(AkGameplayStatics_eventGetAkComponent_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, AkGameplayStatics_eventGetAkComponent_Parms), 0x0010000000080588, Z_Construct_UClass_UAkComponent_NoRegister());
			UProperty* NewProp_LocationType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LocationType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(LocationType, AkGameplayStatics_eventGetAkComponent_Parms), 0x0010000000000080, Z_Construct_UEnum_Engine_EAttachLocation());
			UProperty* NewProp_Location = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Location"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Location, AkGameplayStatics_eventGetAkComponent_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_AttachPointName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AttachPointName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(AttachPointName, AkGameplayStatics_eventGetAkComponent_Parms), 0x0010000000000080);
			UProperty* NewProp_AttachToComponent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AttachToComponent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(AttachToComponent, AkGameplayStatics_eventGetAkComponent_Parms), 0x0010000000080080, Z_Construct_UClass_USceneComponent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_AttachPointName"), TEXT("None"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_LocationType"), TEXT("KeepRelativeOffset"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkGameplayStatics.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get an AkComponent attached to and following the specified component.\n@param AttachPointName - Optional named point within the AttachComponent to play the sound at."));
			MetaData->SetValue(NewProp_ReturnValue, TEXT("EditInline"), TEXT("true"));
			MetaData->SetValue(NewProp_AttachToComponent, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkGameplayStatics_LoadBank()
	{
		struct AkGameplayStatics_eventLoadBank_Parms
		{
			UAkAudioBank* Bank;
			FString BankName;
		};
		UObject* Outer=Z_Construct_UClass_UAkGameplayStatics();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("LoadBank"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AkGameplayStatics_eventLoadBank_Parms));
			UProperty* NewProp_BankName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("BankName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(BankName, AkGameplayStatics_eventLoadBank_Parms), 0x0010040000000080);
			UProperty* NewProp_Bank = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Bank"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Bank, AkGameplayStatics_eventLoadBank_Parms), 0x0010000000000080, Z_Construct_UClass_UAkAudioBank_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("AdvancedDisplay"), TEXT("1"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|SoundBanks"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkGameplayStatics.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("* Loads a bank.\n* @param Bank - The bank to load."));
			MetaData->SetValue(NewProp_BankName, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkGameplayStatics_LoadBankByName()
	{
		struct AkGameplayStatics_eventLoadBankByName_Parms
		{
			FString BankName;
		};
		UObject* Outer=Z_Construct_UClass_UAkGameplayStatics();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("LoadBankByName"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AkGameplayStatics_eventLoadBankByName_Parms));
			UProperty* NewProp_BankName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("BankName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(BankName, AkGameplayStatics_eventLoadBankByName_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|SoundBanks"));
			MetaData->SetValue(ReturnFunction, TEXT("DeprecatedFunction"), TEXT(""));
			MetaData->SetValue(ReturnFunction, TEXT("DeprecationMessage"), TEXT("Please use the \"Bank Name\" field of Load Bank"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkGameplayStatics.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("* Loads a bank by its name.\n* @param Bank - The bank to load."));
			MetaData->SetValue(NewProp_BankName, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkGameplayStatics_LoadBanks()
	{
		struct AkGameplayStatics_eventLoadBanks_Parms
		{
			TArray<UAkAudioBank*> SoundBanks;
			bool SynchronizeSoundBanks;
		};
		UObject* Outer=Z_Construct_UClass_UAkGameplayStatics();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("LoadBanks"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(AkGameplayStatics_eventLoadBanks_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SynchronizeSoundBanks, AkGameplayStatics_eventLoadBanks_Parms, bool);
			UProperty* NewProp_SynchronizeSoundBanks = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SynchronizeSoundBanks"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SynchronizeSoundBanks, AkGameplayStatics_eventLoadBanks_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(SynchronizeSoundBanks, AkGameplayStatics_eventLoadBanks_Parms), sizeof(bool), true);
			UProperty* NewProp_SoundBanks = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SoundBanks"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(SoundBanks, AkGameplayStatics_eventLoadBanks_Parms), 0x0010000008000182);
			UProperty* NewProp_SoundBanks_Inner = new(EC_InternalUseOnlyConstructor, NewProp_SoundBanks, TEXT("SoundBanks"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UAkAudioBank_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|SoundBanks"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkGameplayStatics.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("* Loads an array of bank.\n* @param Banks - An array of banks to load\n* @param CleanUpBanks - If true, will unload any loaded banks that are not in Banks"));
			MetaData->SetValue(NewProp_SoundBanks, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkGameplayStatics_LoadInitBank()
	{
		UObject* Outer=Z_Construct_UClass_UAkGameplayStatics();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("LoadInitBank"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|SoundBanks"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkGameplayStatics.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("* Loads the init bank."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkGameplayStatics_PostEvent()
	{
		struct AkGameplayStatics_eventPostEvent_Parms
		{
			UAkAudioEvent* AkEvent;
			AActor* Actor;
			bool bStopWhenAttachedToDestroyed;
			FString EventName;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAkGameplayStatics();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PostEvent"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AkGameplayStatics_eventPostEvent_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, AkGameplayStatics_eventPostEvent_Parms), 0x0010000000000580);
			UProperty* NewProp_EventName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("EventName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(EventName, AkGameplayStatics_eventPostEvent_Parms), 0x0010040000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bStopWhenAttachedToDestroyed, AkGameplayStatics_eventPostEvent_Parms, bool);
			UProperty* NewProp_bStopWhenAttachedToDestroyed = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bStopWhenAttachedToDestroyed"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bStopWhenAttachedToDestroyed, AkGameplayStatics_eventPostEvent_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(bStopWhenAttachedToDestroyed, AkGameplayStatics_eventPostEvent_Parms), sizeof(bool), true);
			UProperty* NewProp_Actor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Actor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Actor, AkGameplayStatics_eventPostEvent_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_AkEvent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AkEvent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(AkEvent, AkGameplayStatics_eventPostEvent_Parms), 0x0010000000000080, Z_Construct_UClass_UAkAudioEvent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("AdvancedDisplay"), TEXT("3"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|Actor"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bStopWhenAttachedToDestroyed"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkGameplayStatics.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Posts a Wwise Event attached to and following the root component of the specified actor.\n@param AkEvent - ak event to play.\n@param Actor - actor on which to play the event.\n@param bStopWhenAttachedToDestroyed - Specifies whether the sound should stop playing when the owner of the attach to component is destroyed."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkGameplayStatics_PostEventAtLocation()
	{
		struct AkGameplayStatics_eventPostEventAtLocation_Parms
		{
			UAkAudioEvent* AkEvent;
			FVector Location;
			FRotator Orientation;
			FString EventName;
			UObject* WorldContextObject;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAkGameplayStatics();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PostEventAtLocation"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04822401, 65535, sizeof(AkGameplayStatics_eventPostEventAtLocation_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, AkGameplayStatics_eventPostEventAtLocation_Parms), 0x0010000000000580);
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, AkGameplayStatics_eventPostEventAtLocation_Parms), 0x0010040000000080, Z_Construct_UClass_UObject_NoRegister());
			UProperty* NewProp_EventName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("EventName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(EventName, AkGameplayStatics_eventPostEventAtLocation_Parms), 0x0010040000000080);
			UProperty* NewProp_Orientation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Orientation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Orientation, AkGameplayStatics_eventPostEventAtLocation_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_Location = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Location"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Location, AkGameplayStatics_eventPostEventAtLocation_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_AkEvent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AkEvent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(AkEvent, AkGameplayStatics_eventPostEventAtLocation_Parms), 0x0010000000000080, Z_Construct_UClass_UAkAudioEvent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("AdvancedDisplay"), TEXT("3"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkGameplayStatics.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Posts a Wwise Event at the specified location. This is a fire and forget sound, created on a temporary Wwise Game Object. Replication is also not handled at this point.\n@param AkEvent - Wwise Event to post.\n@param Location - Location from which to post the Wwise Event.\n@param Orientation - Orientation of the event."));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContextObject"));
			MetaData->SetValue(NewProp_EventName, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkGameplayStatics_PostEventAtLocationByName()
	{
		struct AkGameplayStatics_eventPostEventAtLocationByName_Parms
		{
			FString EventName;
			FVector Location;
			FRotator Orientation;
			UObject* WorldContextObject;
		};
		UObject* Outer=Z_Construct_UClass_UAkGameplayStatics();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PostEventAtLocationByName"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04822401, 65535, sizeof(AkGameplayStatics_eventPostEventAtLocationByName_Parms));
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, AkGameplayStatics_eventPostEventAtLocationByName_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			UProperty* NewProp_Orientation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Orientation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Orientation, AkGameplayStatics_eventPostEventAtLocationByName_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_Location = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Location"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Location, AkGameplayStatics_eventPostEventAtLocationByName_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_EventName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("EventName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(EventName, AkGameplayStatics_eventPostEventAtLocationByName_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic"));
			MetaData->SetValue(ReturnFunction, TEXT("DeprecatedFunction"), TEXT(""));
			MetaData->SetValue(ReturnFunction, TEXT("DeprecationMessage"), TEXT("Please use the \"Event Name\" field of PostEventAtLocation"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkGameplayStatics.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Posts a Wwise Event by name at the specified location. This is a fire and forget sound, created on a temporary Wwise Game Object. Replication is also not handled at this point.\n@param AkEvent - Wwise Event to post.\n@param Location - Location from which to post the Wwise Event.\n@param Orientation - Orientation of the event."));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContextObject"));
			MetaData->SetValue(NewProp_EventName, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkGameplayStatics_PostEventAttached()
	{
		struct AkGameplayStatics_eventPostEventAttached_Parms
		{
			UAkAudioEvent* AkEvent;
			AActor* Actor;
			FName AttachPointName;
			bool bStopWhenAttachedToDestroyed;
			FString EventName;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAkGameplayStatics();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PostEventAttached"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AkGameplayStatics_eventPostEventAttached_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, AkGameplayStatics_eventPostEventAttached_Parms), 0x0010000000000580);
			UProperty* NewProp_EventName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("EventName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(EventName, AkGameplayStatics_eventPostEventAttached_Parms), 0x0010040000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bStopWhenAttachedToDestroyed, AkGameplayStatics_eventPostEventAttached_Parms, bool);
			UProperty* NewProp_bStopWhenAttachedToDestroyed = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bStopWhenAttachedToDestroyed"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bStopWhenAttachedToDestroyed, AkGameplayStatics_eventPostEventAttached_Parms), 0x0010040000000080, CPP_BOOL_PROPERTY_BITMASK(bStopWhenAttachedToDestroyed, AkGameplayStatics_eventPostEventAttached_Parms), sizeof(bool), true);
			UProperty* NewProp_AttachPointName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AttachPointName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(AttachPointName, AkGameplayStatics_eventPostEventAttached_Parms), 0x0010000000000080);
			UProperty* NewProp_Actor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Actor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Actor, AkGameplayStatics_eventPostEventAttached_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_AkEvent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AkEvent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(AkEvent, AkGameplayStatics_eventPostEventAttached_Parms), 0x0010000000000080, Z_Construct_UClass_UAkAudioEvent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("AdvancedDisplay"), TEXT("3"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|Actor"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_AttachPointName"), TEXT("None"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bStopWhenAttachedToDestroyed"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("DeprecatedFunction"), TEXT(""));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkGameplayStatics.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Posts a Wwise Event attached to and following the specified component.\n@param AkEvent - Wwise Event to post.\n@param Actor - actor on which to post the Wwise Event.\n@param AttachPointName - Optional named point within the AttachComponent to play the sound at (NOT FUNCTIONAL).\n@param bStopWhenAttachedToDestroyed - Specifies whether the sound should stop playing when the owner of the attach to component is destroyed."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkGameplayStatics_PostEventByName()
	{
		struct AkGameplayStatics_eventPostEventByName_Parms
		{
			FString EventName;
			AActor* Actor;
			bool bStopWhenAttachedToDestroyed;
		};
		UObject* Outer=Z_Construct_UClass_UAkGameplayStatics();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PostEventByName"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AkGameplayStatics_eventPostEventByName_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bStopWhenAttachedToDestroyed, AkGameplayStatics_eventPostEventByName_Parms, bool);
			UProperty* NewProp_bStopWhenAttachedToDestroyed = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bStopWhenAttachedToDestroyed"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bStopWhenAttachedToDestroyed, AkGameplayStatics_eventPostEventByName_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(bStopWhenAttachedToDestroyed, AkGameplayStatics_eventPostEventByName_Parms), sizeof(bool), true);
			UProperty* NewProp_Actor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Actor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Actor, AkGameplayStatics_eventPostEventByName_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_EventName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("EventName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(EventName, AkGameplayStatics_eventPostEventByName_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|Actor"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bStopWhenAttachedToDestroyed"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("DeprecatedFunction"), TEXT(""));
			MetaData->SetValue(ReturnFunction, TEXT("DeprecationMessage"), TEXT("Please use the \"Event Name\" field of PostEvent"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkGameplayStatics.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Posts a Wwise Event by name attached to and following the root component of the specified actor.\n@param AkEvent - ak event to play.\n@param Actor - actor on which to play the event.\n@param bStopWhenAttachedToDestroyed - Specifies whether the sound should stop playing when the owner of the attach to component is destroyed."));
			MetaData->SetValue(NewProp_EventName, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkGameplayStatics_PostTrigger()
	{
		struct AkGameplayStatics_eventPostTrigger_Parms
		{
			FName Trigger;
			AActor* Actor;
		};
		UObject* Outer=Z_Construct_UClass_UAkGameplayStatics();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PostTrigger"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AkGameplayStatics_eventPostTrigger_Parms));
			UProperty* NewProp_Actor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Actor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Actor, AkGameplayStatics_eventPostTrigger_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_Trigger = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Trigger"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(Trigger, AkGameplayStatics_eventPostTrigger_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|Actor"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkGameplayStatics.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Posts a Trigger, targetting the root component of a specified actor.\n@param Trigger - Name of the Trigger\n@param Actor - Actor on which to post the Trigger"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkGameplayStatics_SetOcclusionRefreshInterval()
	{
		struct AkGameplayStatics_eventSetOcclusionRefreshInterval_Parms
		{
			float RefreshInterval;
			AActor* Actor;
		};
		UObject* Outer=Z_Construct_UClass_UAkGameplayStatics();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetOcclusionRefreshInterval"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AkGameplayStatics_eventSetOcclusionRefreshInterval_Parms));
			UProperty* NewProp_Actor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Actor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Actor, AkGameplayStatics_eventSetOcclusionRefreshInterval_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_RefreshInterval = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RefreshInterval"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(RefreshInterval, AkGameplayStatics_eventSetOcclusionRefreshInterval_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|Actor"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkGameplayStatics.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Sets the occlusion calculation refresh interval, targetting the root component of a specified actor.\n@param RefreshInterval - Value of the wanted refresh interval\n@param Actor - Actor on which to set the refresh interval"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkGameplayStatics_SetOutputBusVolume()
	{
		struct AkGameplayStatics_eventSetOutputBusVolume_Parms
		{
			float BusVolume;
			AActor* Actor;
		};
		UObject* Outer=Z_Construct_UClass_UAkGameplayStatics();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetOutputBusVolume"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AkGameplayStatics_eventSetOutputBusVolume_Parms));
			UProperty* NewProp_Actor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Actor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Actor, AkGameplayStatics_eventSetOutputBusVolume_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_BusVolume = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("BusVolume"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BusVolume, AkGameplayStatics_eventSetOutputBusVolume_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|Actor"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkGameplayStatics.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Set the output bus volume (direct) to be used for the specified game object.\nThe control value is a number ranging from 0.0f to 1.0f.\n\n@param BusVolume - Bus volume to set\n@param Actor - Actor on which to set the flag"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkGameplayStatics_SetRTPCValue()
	{
		struct AkGameplayStatics_eventSetRTPCValue_Parms
		{
			FName RTPC;
			float Value;
			int32 InterpolationTimeMs;
			AActor* Actor;
		};
		UObject* Outer=Z_Construct_UClass_UAkGameplayStatics();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetRTPCValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AkGameplayStatics_eventSetRTPCValue_Parms));
			UProperty* NewProp_Actor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Actor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Actor, AkGameplayStatics_eventSetRTPCValue_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_InterpolationTimeMs = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InterpolationTimeMs"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(InterpolationTimeMs, AkGameplayStatics_eventSetRTPCValue_Parms), 0x0010000000000080);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Value, AkGameplayStatics_eventSetRTPCValue_Parms), 0x0010000000000080);
			UProperty* NewProp_RTPC = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RTPC"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(RTPC, AkGameplayStatics_eventSetRTPCValue_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkGameplayStatics.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Sets the value of a Game Parameter, optionally targetting the root component of a specified actor.\n@param RTPC - The name of the Game Parameter to set\n@param Value - The value of the Game Parameter\n@param InterpolationTimeMs - Duration during which the Game Parameter is interpolated towards Value (in ms)\n@param Actor - (Optional) Actor on which to set the Game Parameter value"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkGameplayStatics_SetState()
	{
		struct AkGameplayStatics_eventSetState_Parms
		{
			FName StateGroup;
			FName State;
		};
		UObject* Outer=Z_Construct_UClass_UAkGameplayStatics();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetState"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AkGameplayStatics_eventSetState_Parms));
			UProperty* NewProp_State = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("State"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(State, AkGameplayStatics_eventSetState_Parms), 0x0010000000000080);
			UProperty* NewProp_StateGroup = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("StateGroup"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(StateGroup, AkGameplayStatics_eventSetState_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkGameplayStatics.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Set the active State for a given State Group.\n@param StateGroup - Name of the State Group to be modified\n@param State - Name of the State to be made active"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkGameplayStatics_SetSwitch()
	{
		struct AkGameplayStatics_eventSetSwitch_Parms
		{
			FName SwitchGroup;
			FName SwitchState;
			AActor* Actor;
		};
		UObject* Outer=Z_Construct_UClass_UAkGameplayStatics();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetSwitch"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AkGameplayStatics_eventSetSwitch_Parms));
			UProperty* NewProp_Actor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Actor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Actor, AkGameplayStatics_eventSetSwitch_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_SwitchState = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SwitchState"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(SwitchState, AkGameplayStatics_eventSetSwitch_Parms), 0x0010000000000080);
			UProperty* NewProp_SwitchGroup = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SwitchGroup"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(SwitchGroup, AkGameplayStatics_eventSetSwitch_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|Actor"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkGameplayStatics.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Sets the active Switch for a given Switch Group, targetting the root component of a specified actor.\n@param SwitchGroup - Name of the Switch Group to be modified\n@param SwitchState - Name of the Switch to be made active\n@param Actor - Actor on which to set the switch"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkGameplayStatics_SpawnAkComponentAtLocation()
	{
		struct AkGameplayStatics_eventSpawnAkComponentAtLocation_Parms
		{
			UObject* WorldContextObject;
			UAkAudioEvent* AkEvent;
			FVector Location;
			FRotator Orientation;
			bool AutoPost;
			FString EventName;
			bool AutoDestroy;
			UAkComponent* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAkGameplayStatics();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SpawnAkComponentAtLocation"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04822401, 65535, sizeof(AkGameplayStatics_eventSpawnAkComponentAtLocation_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, AkGameplayStatics_eventSpawnAkComponentAtLocation_Parms), 0x0010000000080588, Z_Construct_UClass_UAkComponent_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(AutoDestroy, AkGameplayStatics_eventSpawnAkComponentAtLocation_Parms, bool);
			UProperty* NewProp_AutoDestroy = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AutoDestroy"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(AutoDestroy, AkGameplayStatics_eventSpawnAkComponentAtLocation_Parms), 0x0010040000000080, CPP_BOOL_PROPERTY_BITMASK(AutoDestroy, AkGameplayStatics_eventSpawnAkComponentAtLocation_Parms), sizeof(bool), true);
			UProperty* NewProp_EventName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("EventName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(EventName, AkGameplayStatics_eventSpawnAkComponentAtLocation_Parms), 0x0010040000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(AutoPost, AkGameplayStatics_eventSpawnAkComponentAtLocation_Parms, bool);
			UProperty* NewProp_AutoPost = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AutoPost"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(AutoPost, AkGameplayStatics_eventSpawnAkComponentAtLocation_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(AutoPost, AkGameplayStatics_eventSpawnAkComponentAtLocation_Parms), sizeof(bool), true);
			UProperty* NewProp_Orientation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Orientation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Orientation, AkGameplayStatics_eventSpawnAkComponentAtLocation_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_Location = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Location"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Location, AkGameplayStatics_eventSpawnAkComponentAtLocation_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_AkEvent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AkEvent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(AkEvent, AkGameplayStatics_eventSpawnAkComponentAtLocation_Parms), 0x0010000000000080, Z_Construct_UClass_UAkAudioEvent_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, AkGameplayStatics_eventSpawnAkComponentAtLocation_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("AdvancedDisplay"), TEXT("5"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_AutoDestroy"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkGameplayStatics.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Spawn an AkComponent at a location. Allows, for example, to set a switch on a fire and forget sound.\n@param AkEvent - Wwise Event to post.\n@param Location - Location from which to post the Wwise Event.\n@param Orientation - Orientation of the event.\n@param AutoPost - Automatically post the event once the AkComponent is created.\n@param AutoDestroy - Automatically destroy the AkComponent once the event is finished."));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContextObject"));
			MetaData->SetValue(NewProp_ReturnValue, TEXT("EditInline"), TEXT("true"));
			MetaData->SetValue(NewProp_EventName, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkGameplayStatics_StartAllAmbientSounds()
	{
		struct AkGameplayStatics_eventStartAllAmbientSounds_Parms
		{
			UObject* WorldContextObject;
		};
		UObject* Outer=Z_Construct_UClass_UAkGameplayStatics();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("StartAllAmbientSounds"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AkGameplayStatics_eventStartAllAmbientSounds_Parms));
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, AkGameplayStatics_eventStartAllAmbientSounds_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|AkAmbientSound"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkGameplayStatics.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Start all Ak ambient sounds."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkGameplayStatics_StartOutputCapture()
	{
		struct AkGameplayStatics_eventStartOutputCapture_Parms
		{
			FString Filename;
		};
		UObject* Outer=Z_Construct_UClass_UAkGameplayStatics();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("StartOutputCapture"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AkGameplayStatics_eventStartOutputCapture_Parms));
			UProperty* NewProp_Filename = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Filename"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Filename, AkGameplayStatics_eventStartOutputCapture_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|Debug"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkGameplayStatics.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Starts a Wwise output capture. The output file will be located in the same folder as the SoundBanks.\n@param Filename - The name to give to the output file."));
			MetaData->SetValue(NewProp_Filename, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkGameplayStatics_StartProfilerCapture()
	{
		struct AkGameplayStatics_eventStartProfilerCapture_Parms
		{
			FString Filename;
		};
		UObject* Outer=Z_Construct_UClass_UAkGameplayStatics();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("StartProfilerCapture"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AkGameplayStatics_eventStartProfilerCapture_Parms));
			UProperty* NewProp_Filename = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Filename"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Filename, AkGameplayStatics_eventStartProfilerCapture_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|Debug"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkGameplayStatics.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Starts a Wwise profiler capture. The output file will be located in the same folder as the SoundBanks.\n@param Filename - The name to give to the output file."));
			MetaData->SetValue(NewProp_Filename, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkGameplayStatics_StopActor()
	{
		struct AkGameplayStatics_eventStopActor_Parms
		{
			AActor* Actor;
		};
		UObject* Outer=Z_Construct_UClass_UAkGameplayStatics();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("StopActor"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AkGameplayStatics_eventStopActor_Parms));
			UProperty* NewProp_Actor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Actor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Actor, AkGameplayStatics_eventStopActor_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|Actor"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkGameplayStatics.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Stop all sounds for an actor."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkGameplayStatics_StopAll()
	{
		UObject* Outer=Z_Construct_UClass_UAkGameplayStatics();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("StopAll"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkGameplayStatics.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Stop all sounds."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkGameplayStatics_StopAllAmbientSounds()
	{
		struct AkGameplayStatics_eventStopAllAmbientSounds_Parms
		{
			UObject* WorldContextObject;
		};
		UObject* Outer=Z_Construct_UClass_UAkGameplayStatics();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("StopAllAmbientSounds"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AkGameplayStatics_eventStopAllAmbientSounds_Parms));
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, AkGameplayStatics_eventStopAllAmbientSounds_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|AkAmbientSound"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkGameplayStatics.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Stop all Ak ambient sounds."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkGameplayStatics_StopOutputCapture()
	{
		UObject* Outer=Z_Construct_UClass_UAkGameplayStatics();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("StopOutputCapture"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|Debug"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkGameplayStatics.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Stops a Wwise output capture. The output file will be located in the same folder as the SoundBanks."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkGameplayStatics_StopProfilerCapture()
	{
		UObject* Outer=Z_Construct_UClass_UAkGameplayStatics();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("StopProfilerCapture"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|Debug"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkGameplayStatics.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Stops a Wwise profiler capture. The output file will be located in the same folder as the SoundBanks."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkGameplayStatics_UnloadBank()
	{
		struct AkGameplayStatics_eventUnloadBank_Parms
		{
			UAkAudioBank* Bank;
			FString BankName;
		};
		UObject* Outer=Z_Construct_UClass_UAkGameplayStatics();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UnloadBank"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AkGameplayStatics_eventUnloadBank_Parms));
			UProperty* NewProp_BankName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("BankName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(BankName, AkGameplayStatics_eventUnloadBank_Parms), 0x0010040000000080);
			UProperty* NewProp_Bank = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Bank"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Bank, AkGameplayStatics_eventUnloadBank_Parms), 0x0010000000000080, Z_Construct_UClass_UAkAudioBank_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("AdvancedDisplay"), TEXT("1"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|SoundBanks"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkGameplayStatics.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Unloads a bank.\n@param Bank - The bank to unload."));
			MetaData->SetValue(NewProp_BankName, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkGameplayStatics_UnloadBankByName()
	{
		struct AkGameplayStatics_eventUnloadBankByName_Parms
		{
			FString BankName;
		};
		UObject* Outer=Z_Construct_UClass_UAkGameplayStatics();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UnloadBankByName"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AkGameplayStatics_eventUnloadBankByName_Parms));
			UProperty* NewProp_BankName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("BankName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(BankName, AkGameplayStatics_eventUnloadBankByName_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|SoundBanks"));
			MetaData->SetValue(ReturnFunction, TEXT("DeprecatedFunction"), TEXT(""));
			MetaData->SetValue(ReturnFunction, TEXT("DeprecationMessage"), TEXT("Please use the \"Bank Name\" field of Unload Bank"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkGameplayStatics.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Unloads a bank by its name.\n@param Bank - The bank to unload."));
			MetaData->SetValue(NewProp_BankName, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAkGameplayStatics_UseReverbVolumes()
	{
		struct AkGameplayStatics_eventUseReverbVolumes_Parms
		{
			bool inUseReverbVolumes;
			AActor* Actor;
		};
		UObject* Outer=Z_Construct_UClass_UAkGameplayStatics();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UseReverbVolumes"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AkGameplayStatics_eventUseReverbVolumes_Parms));
			UProperty* NewProp_Actor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Actor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Actor, AkGameplayStatics_eventUseReverbVolumes_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(inUseReverbVolumes, AkGameplayStatics_eventUseReverbVolumes_Parms, bool);
			UProperty* NewProp_inUseReverbVolumes = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("inUseReverbVolumes"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(inUseReverbVolumes, AkGameplayStatics_eventUseReverbVolumes_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(inUseReverbVolumes, AkGameplayStatics_eventUseReverbVolumes_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Audiokinetic|Actor"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AkGameplayStatics.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Sets UseReverbVolumes flag on a specified actor. Set value to true to use reverb volumes on this component.\n\n@param inUseReverbVolumes - Whether to use reverb volumes or not.\n@param Actor - Actor on which to set the flag"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UAkGameplayStatics_NoRegister()
	{
		return UAkGameplayStatics::StaticClass();
	}
	UClass* Z_Construct_UClass_UAkGameplayStatics()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlueprintFunctionLibrary();
			Z_Construct_UPackage__Script_AkAudio();
			OuterClass = UAkGameplayStatics::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;

				OuterClass->LinkChild(Z_Construct_UFunction_UAkGameplayStatics_AddOutputCaptureMarker());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkGameplayStatics_ClearBanks());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkGameplayStatics_GetAkComponent());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkGameplayStatics_LoadBank());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkGameplayStatics_LoadBankByName());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkGameplayStatics_LoadBanks());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkGameplayStatics_LoadInitBank());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkGameplayStatics_PostEvent());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkGameplayStatics_PostEventAtLocation());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkGameplayStatics_PostEventAtLocationByName());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkGameplayStatics_PostEventAttached());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkGameplayStatics_PostEventByName());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkGameplayStatics_PostTrigger());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkGameplayStatics_SetOcclusionRefreshInterval());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkGameplayStatics_SetOutputBusVolume());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkGameplayStatics_SetRTPCValue());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkGameplayStatics_SetState());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkGameplayStatics_SetSwitch());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkGameplayStatics_SpawnAkComponentAtLocation());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkGameplayStatics_StartAllAmbientSounds());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkGameplayStatics_StartOutputCapture());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkGameplayStatics_StartProfilerCapture());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkGameplayStatics_StopActor());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkGameplayStatics_StopAll());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkGameplayStatics_StopAllAmbientSounds());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkGameplayStatics_StopOutputCapture());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkGameplayStatics_StopProfilerCapture());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkGameplayStatics_UnloadBank());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkGameplayStatics_UnloadBankByName());
				OuterClass->LinkChild(Z_Construct_UFunction_UAkGameplayStatics_UseReverbVolumes());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkGameplayStatics_AddOutputCaptureMarker(), "AddOutputCaptureMarker"); // 1893946195
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkGameplayStatics_ClearBanks(), "ClearBanks"); // 454101883
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkGameplayStatics_GetAkComponent(), "GetAkComponent"); // 1567459504
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkGameplayStatics_LoadBank(), "LoadBank"); // 3645234192
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkGameplayStatics_LoadBankByName(), "LoadBankByName"); // 3747848878
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkGameplayStatics_LoadBanks(), "LoadBanks"); // 1707637381
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkGameplayStatics_LoadInitBank(), "LoadInitBank"); // 3240629201
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkGameplayStatics_PostEvent(), "PostEvent"); // 825680530
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkGameplayStatics_PostEventAtLocation(), "PostEventAtLocation"); // 3927003136
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkGameplayStatics_PostEventAtLocationByName(), "PostEventAtLocationByName"); // 3803119635
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkGameplayStatics_PostEventAttached(), "PostEventAttached"); // 3470965636
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkGameplayStatics_PostEventByName(), "PostEventByName"); // 830552222
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkGameplayStatics_PostTrigger(), "PostTrigger"); // 1588224407
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkGameplayStatics_SetOcclusionRefreshInterval(), "SetOcclusionRefreshInterval"); // 877140725
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkGameplayStatics_SetOutputBusVolume(), "SetOutputBusVolume"); // 2801119326
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkGameplayStatics_SetRTPCValue(), "SetRTPCValue"); // 2264615919
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkGameplayStatics_SetState(), "SetState"); // 1049127515
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkGameplayStatics_SetSwitch(), "SetSwitch"); // 3096387990
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkGameplayStatics_SpawnAkComponentAtLocation(), "SpawnAkComponentAtLocation"); // 2500104686
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkGameplayStatics_StartAllAmbientSounds(), "StartAllAmbientSounds"); // 186510579
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkGameplayStatics_StartOutputCapture(), "StartOutputCapture"); // 4221304543
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkGameplayStatics_StartProfilerCapture(), "StartProfilerCapture"); // 3705698846
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkGameplayStatics_StopActor(), "StopActor"); // 3834868420
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkGameplayStatics_StopAll(), "StopAll"); // 3909934991
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkGameplayStatics_StopAllAmbientSounds(), "StopAllAmbientSounds"); // 3038127955
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkGameplayStatics_StopOutputCapture(), "StopOutputCapture"); // 2554537257
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkGameplayStatics_StopProfilerCapture(), "StopProfilerCapture"); // 214336496
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkGameplayStatics_UnloadBank(), "UnloadBank"); // 4029284161
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkGameplayStatics_UnloadBankByName(), "UnloadBankByName"); // 3088347324
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UAkGameplayStatics_UseReverbVolumes(), "UseReverbVolumes"); // 473270823
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AkGameplayStatics.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AkGameplayStatics.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAkGameplayStatics(Z_Construct_UClass_UAkGameplayStatics, &UAkGameplayStatics::StaticClass, TEXT("UAkGameplayStatics"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAkGameplayStatics);
	UClass* Z_Construct_UClass_AAkReverbVolume_NoRegister()
	{
		return AAkReverbVolume::StaticClass();
	}
	UClass* Z_Construct_UClass_AAkReverbVolume()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AVolume();
			Z_Construct_UPackage__Script_AkAudio();
			OuterClass = AAkReverbVolume::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_NextLowerPriorityAkReverbVolume = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NextLowerPriorityAkReverbVolume"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(NextLowerPriorityAkReverbVolume, AAkReverbVolume), 0x0010000000002000, Z_Construct_UClass_AAkReverbVolume_NoRegister());
				UProperty* NewProp_Priority = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Priority"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Priority, AAkReverbVolume), 0x0010000000000005);
				UProperty* NewProp_FadeRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FadeRate"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(FadeRate, AAkReverbVolume), 0x0010000000000005);
				UProperty* NewProp_SendLevel = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SendLevel"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(SendLevel, AAkReverbVolume), 0x0010000000000005);
				UProperty* NewProp_AuxBusName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AuxBusName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(AuxBusName, AAkReverbVolume), 0x0010040000000005);
				UProperty* NewProp_AuxBus = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AuxBus"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(AuxBus, AAkReverbVolume), 0x0010000000000005, Z_Construct_UClass_UAkAuxBus_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEnabled, AAkReverbVolume, uint8);
				UProperty* NewProp_bEnabled = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bEnabled"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEnabled, AAkReverbVolume), 0x0010000000000025, CPP_BOOL_PROPERTY_BITMASK(bEnabled, AAkReverbVolume), sizeof(uint8), false);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Advanced Attachment Volume Brush Physics Object Display Rendering Physics Input Blueprint"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AkReverbVolume.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AkReverbVolume.h"));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("AAkReverbVolume"));
				MetaData->SetValue(NewProp_NextLowerPriorityAkReverbVolume, TEXT("ModuleRelativePath"), TEXT("Classes/AkReverbVolume.h"));
				MetaData->SetValue(NewProp_NextLowerPriorityAkReverbVolume, TEXT("ToolTip"), TEXT("We keep a  linked list of ReverbVolumes sorted by priority for faster finding of reverb volumes at a specific location.\n    This points to the next volume in the list."));
				MetaData->SetValue(NewProp_Priority, TEXT("Category"), TEXT("AKReverbVolume"));
				MetaData->SetValue(NewProp_Priority, TEXT("ModuleRelativePath"), TEXT("Classes/AkReverbVolume.h"));
				MetaData->SetValue(NewProp_Priority, TEXT("ToolTip"), TEXT("The precedence in which the AkReverbVolumes will be applied. In the case of overlapping volumes, only the ones\nwith the highest priority are chosen (the number of simultaneous AkReverbVolumes is configurable in the Unreal\nEditor Project Settings under Plugins > Wwise). If two or more overlapping AkReverbVolumes have the same\npriority, the chosen AkReverbVolume is unpredictable."));
				MetaData->SetValue(NewProp_FadeRate, TEXT("Category"), TEXT("AKReverbVolume"));
				MetaData->SetValue(NewProp_FadeRate, TEXT("ModuleRelativePath"), TEXT("Classes/AkReverbVolume.h"));
				MetaData->SetValue(NewProp_FadeRate, TEXT("ToolTip"), TEXT("Rate at which to fade in/out the SendLevel of the current Reverb Volume when entering/exiting it, in percentage per second (0.2 will make the fade time 5 seconds)"));
				MetaData->SetValue(NewProp_SendLevel, TEXT("Category"), TEXT("AKReverbVolume"));
				MetaData->SetValue(NewProp_SendLevel, TEXT("ModuleRelativePath"), TEXT("Classes/AkReverbVolume.h"));
				MetaData->SetValue(NewProp_SendLevel, TEXT("ToolTip"), TEXT("Maximum send level to the Wwise Auxiliary Bus associated to this AkReverbVolume"));
				MetaData->SetValue(NewProp_AuxBusName, TEXT("Category"), TEXT("AKReverbVolume"));
				MetaData->SetValue(NewProp_AuxBusName, TEXT("ModuleRelativePath"), TEXT("Classes/AkReverbVolume.h"));
				MetaData->SetValue(NewProp_AuxBusName, TEXT("ToolTip"), TEXT("Wwise Auxiliary Bus associated to this AkReverbVolume"));
				MetaData->SetValue(NewProp_AuxBus, TEXT("Category"), TEXT("AKReverbVolume"));
				MetaData->SetValue(NewProp_AuxBus, TEXT("ModuleRelativePath"), TEXT("Classes/AkReverbVolume.h"));
				MetaData->SetValue(NewProp_bEnabled, TEXT("Category"), TEXT("Toggle"));
				MetaData->SetValue(NewProp_bEnabled, TEXT("ModuleRelativePath"), TEXT("Classes/AkReverbVolume.h"));
				MetaData->SetValue(NewProp_bEnabled, TEXT("ToolTip"), TEXT("Whether this volume is currently enabled and able to affect sounds"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AAkReverbVolume(Z_Construct_UClass_AAkReverbVolume, &AAkReverbVolume::StaticClass, TEXT("AAkReverbVolume"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AAkReverbVolume);
	UClass* Z_Construct_UClass_UAkSettings_NoRegister()
	{
		return UAkSettings::StaticClass();
	}
	UClass* Z_Construct_UClass_UAkSettings()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_AkAudio();
			OuterClass = UAkSettings::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100086;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_WwiseMacInstallationPath = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("WwiseMacInstallationPath"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(WwiseMacInstallationPath, UAkSettings), 0x0010000000004001, Z_Construct_UScriptStruct_FFilePath());
				UProperty* NewProp_WwiseWindowsInstallationPath = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("WwiseWindowsInstallationPath"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(WwiseWindowsInstallationPath, UAkSettings), 0x0010000000004001, Z_Construct_UScriptStruct_FDirectoryPath());
				UProperty* NewProp_WwiseProjectPath = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("WwiseProjectPath"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(WwiseProjectPath, UAkSettings), 0x0010000000004001, Z_Construct_UScriptStruct_FFilePath());
				UProperty* NewProp_MaxSimultaneousReverbVolumes = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxSimultaneousReverbVolumes"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(MaxSimultaneousReverbVolumes, UAkSettings), 0x0010000000004001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AkSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AkSettings.h"));
				MetaData->SetValue(NewProp_WwiseMacInstallationPath, TEXT("AbsolutePath"), TEXT(""));
				MetaData->SetValue(NewProp_WwiseMacInstallationPath, TEXT("Category"), TEXT("Installation"));
				MetaData->SetValue(NewProp_WwiseMacInstallationPath, TEXT("FilePathFilter"), TEXT("app"));
				MetaData->SetValue(NewProp_WwiseMacInstallationPath, TEXT("ModuleRelativePath"), TEXT("Classes/AkSettings.h"));
				MetaData->SetValue(NewProp_WwiseMacInstallationPath, TEXT("ToolTip"), TEXT("Wwise Installation Path (Mac Authoring tool)"));
				MetaData->SetValue(NewProp_WwiseWindowsInstallationPath, TEXT("Category"), TEXT("Installation"));
				MetaData->SetValue(NewProp_WwiseWindowsInstallationPath, TEXT("ModuleRelativePath"), TEXT("Classes/AkSettings.h"));
				MetaData->SetValue(NewProp_WwiseWindowsInstallationPath, TEXT("ToolTip"), TEXT("Wwise Installation Path (Windows Authoring tool)"));
				MetaData->SetValue(NewProp_WwiseProjectPath, TEXT("AbsolutePath"), TEXT(""));
				MetaData->SetValue(NewProp_WwiseProjectPath, TEXT("Category"), TEXT("Installation"));
				MetaData->SetValue(NewProp_WwiseProjectPath, TEXT("FilePathFilter"), TEXT("wproj"));
				MetaData->SetValue(NewProp_WwiseProjectPath, TEXT("ModuleRelativePath"), TEXT("Classes/AkSettings.h"));
				MetaData->SetValue(NewProp_WwiseProjectPath, TEXT("ToolTip"), TEXT("Wwise Project Path"));
				MetaData->SetValue(NewProp_MaxSimultaneousReverbVolumes, TEXT("Category"), TEXT("Ak Reverb Volume"));
				MetaData->SetValue(NewProp_MaxSimultaneousReverbVolumes, TEXT("ModuleRelativePath"), TEXT("Classes/AkSettings.h"));
				MetaData->SetValue(NewProp_MaxSimultaneousReverbVolumes, TEXT("ToolTip"), TEXT("The number of AkReverbVolumes that will be simultaneously applied to a sound source"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAkSettings(Z_Construct_UClass_UAkSettings, &UAkSettings::StaticClass, TEXT("UAkSettings"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAkSettings);
	UScriptStruct* Z_Construct_UScriptStruct_FAkAudioEventTrackKey()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_AkAudio();
		extern uint32 Get_Z_Construct_UScriptStruct_FAkAudioEventTrackKey_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("AkAudioEventTrackKey"), sizeof(FAkAudioEventTrackKey), Get_Z_Construct_UScriptStruct_FAkAudioEventTrackKey_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AkAudioEventTrackKey"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FAkAudioEventTrackKey>, EStructFlags(0x00000001));
			UProperty* NewProp_EventName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EventName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(EventName, FAkAudioEventTrackKey), 0x0010000000020005);
			UProperty* NewProp_AkAudioEvent = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AkAudioEvent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(AkAudioEvent, FAkAudioEventTrackKey), 0x0010000000020005, Z_Construct_UClass_UAkAudioEvent_NoRegister());
			UProperty* NewProp_Time = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Time"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Time, FAkAudioEventTrackKey), 0x0010000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/InterpTrackAkAudioEvent.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Information for one event in the track."));
			MetaData->SetValue(NewProp_EventName, TEXT("Category"), TEXT("AkAudioEventTrackKey"));
			MetaData->SetValue(NewProp_EventName, TEXT("ModuleRelativePath"), TEXT("Classes/InterpTrackAkAudioEvent.h"));
			MetaData->SetValue(NewProp_AkAudioEvent, TEXT("Category"), TEXT("AkAudioEventTrackKey"));
			MetaData->SetValue(NewProp_AkAudioEvent, TEXT("ModuleRelativePath"), TEXT("Classes/InterpTrackAkAudioEvent.h"));
			MetaData->SetValue(NewProp_Time, TEXT("ModuleRelativePath"), TEXT("Classes/InterpTrackAkAudioEvent.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAkAudioEventTrackKey_CRC() { return 3201982471U; }
	UClass* Z_Construct_UClass_UInterpTrackAkAudioEvent_NoRegister()
	{
		return UInterpTrackAkAudioEvent::StaticClass();
	}
	UClass* Z_Construct_UClass_UInterpTrackAkAudioEvent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UInterpTrackVectorBase();
			Z_Construct_UPackage__Script_AkAudio();
			OuterClass = UInterpTrackAkAudioEvent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20102080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bContinueEventOnMatineeEnd, UInterpTrackAkAudioEvent, uint8);
				UProperty* NewProp_bContinueEventOnMatineeEnd = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bContinueEventOnMatineeEnd"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bContinueEventOnMatineeEnd, UInterpTrackAkAudioEvent), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bContinueEventOnMatineeEnd, UInterpTrackAkAudioEvent), sizeof(uint8), false);
				UProperty* NewProp_Events = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Events"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Events, UInterpTrackAkAudioEvent), 0x0010000000000000);
				UProperty* NewProp_Events_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Events, TEXT("Events"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FAkAudioEventTrackKey());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("InterpTrackAkAudioEvent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/InterpTrackAkAudioEvent.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("MinimalAPI"));
				MetaData->SetValue(NewProp_bContinueEventOnMatineeEnd, TEXT("Category"), TEXT("InterpTrackAkAudioEvent"));
				MetaData->SetValue(NewProp_bContinueEventOnMatineeEnd, TEXT("ModuleRelativePath"), TEXT("Classes/InterpTrackAkAudioEvent.h"));
				MetaData->SetValue(NewProp_bContinueEventOnMatineeEnd, TEXT("ToolTip"), TEXT("If true, events on this track will not be forced to finish when the matinee sequence finishes."));
				MetaData->SetValue(NewProp_Events, TEXT("ModuleRelativePath"), TEXT("Classes/InterpTrackAkAudioEvent.h"));
				MetaData->SetValue(NewProp_Events, TEXT("ToolTip"), TEXT("Array of ak events to play at specific times."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UInterpTrackAkAudioEvent(Z_Construct_UClass_UInterpTrackAkAudioEvent, &UInterpTrackAkAudioEvent::StaticClass, TEXT("UInterpTrackAkAudioEvent"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UInterpTrackAkAudioEvent);
	UClass* Z_Construct_UClass_UInterpTrackAkAudioRTPC_NoRegister()
	{
		return UInterpTrackAkAudioRTPC::StaticClass();
	}
	UClass* Z_Construct_UClass_UInterpTrackAkAudioRTPC()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UInterpTrackFloatBase();
			Z_Construct_UPackage__Script_AkAudio();
			OuterClass = UInterpTrackAkAudioRTPC::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20082080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bContinueRTPCOnMatineeEnd, UInterpTrackAkAudioRTPC, uint8);
				UProperty* NewProp_bContinueRTPCOnMatineeEnd = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bContinueRTPCOnMatineeEnd"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bContinueRTPCOnMatineeEnd, UInterpTrackAkAudioRTPC), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bContinueRTPCOnMatineeEnd, UInterpTrackAkAudioRTPC), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bPlayOnReverse, UInterpTrackAkAudioRTPC, uint8);
				UProperty* NewProp_bPlayOnReverse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bPlayOnReverse"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bPlayOnReverse, UInterpTrackAkAudioRTPC), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bPlayOnReverse, UInterpTrackAkAudioRTPC), sizeof(uint8), false);
				UProperty* NewProp_Param = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Param"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Param, UInterpTrackAkAudioRTPC), 0x0010000000000005);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("InterpTrackAkAudioRTPC.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/InterpTrackAkAudioRTPC.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("A track that plays ak events on the groups Actor."));
				MetaData->SetValue(NewProp_bContinueRTPCOnMatineeEnd, TEXT("Category"), TEXT("InterpTrackAkAudioRTPC"));
				MetaData->SetValue(NewProp_bContinueRTPCOnMatineeEnd, TEXT("ModuleRelativePath"), TEXT("Classes/InterpTrackAkAudioRTPC.h"));
				MetaData->SetValue(NewProp_bContinueRTPCOnMatineeEnd, TEXT("ToolTip"), TEXT("If true, rtpc events on this track will not be forced to finish when the matinee sequence finishes."));
				MetaData->SetValue(NewProp_bPlayOnReverse, TEXT("Category"), TEXT("InterpTrackAkAudioRTPC"));
				MetaData->SetValue(NewProp_bPlayOnReverse, TEXT("ModuleRelativePath"), TEXT("Classes/InterpTrackAkAudioRTPC.h"));
				MetaData->SetValue(NewProp_bPlayOnReverse, TEXT("ToolTip"), TEXT("if set, rtpc event plays only when playing the matinee in reverse instead of when the matinee plays forward"));
				MetaData->SetValue(NewProp_Param, TEXT("Category"), TEXT("InterpTrackAkAudioRTPC"));
				MetaData->SetValue(NewProp_Param, TEXT("ModuleRelativePath"), TEXT("Classes/InterpTrackAkAudioRTPC.h"));
				MetaData->SetValue(NewProp_Param, TEXT("ToolTip"), TEXT("Array of rtpc events to play at specific times."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UInterpTrackAkAudioRTPC(Z_Construct_UClass_UInterpTrackAkAudioRTPC, &UInterpTrackAkAudioRTPC::StaticClass, TEXT("UInterpTrackAkAudioRTPC"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UInterpTrackAkAudioRTPC);
	UClass* Z_Construct_UClass_UInterpTrackInstAkAudioEvent_NoRegister()
	{
		return UInterpTrackInstAkAudioEvent::StaticClass();
	}
	UClass* Z_Construct_UClass_UInterpTrackInstAkAudioEvent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UInterpTrackInst();
			Z_Construct_UPackage__Script_AkAudio();
			OuterClass = UInterpTrackInstAkAudioEvent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_LastUpdatePosition = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LastUpdatePosition"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(LastUpdatePosition, UInterpTrackInstAkAudioEvent), 0x0010000000000000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("InterpTrackInstAkAudioEvent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/InterpTrackInstAkAudioEvent.h"));
				MetaData->SetValue(NewProp_LastUpdatePosition, TEXT("ModuleRelativePath"), TEXT("Classes/InterpTrackInstAkAudioEvent.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UInterpTrackInstAkAudioEvent(Z_Construct_UClass_UInterpTrackInstAkAudioEvent, &UInterpTrackInstAkAudioEvent::StaticClass, TEXT("UInterpTrackInstAkAudioEvent"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UInterpTrackInstAkAudioEvent);
	UClass* Z_Construct_UClass_UInterpTrackInstAkAudioRTPC_NoRegister()
	{
		return UInterpTrackInstAkAudioRTPC::StaticClass();
	}
	UClass* Z_Construct_UClass_UInterpTrackInstAkAudioRTPC()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UInterpTrackInst();
			Z_Construct_UPackage__Script_AkAudio();
			OuterClass = UInterpTrackInstAkAudioRTPC::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_LastUpdatePosition = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LastUpdatePosition"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(LastUpdatePosition, UInterpTrackInstAkAudioRTPC), 0x0010000000000000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("InterpTrackInstAkAudioRTPC.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/InterpTrackInstAkAudioRTPC.h"));
				MetaData->SetValue(NewProp_LastUpdatePosition, TEXT("ModuleRelativePath"), TEXT("Classes/InterpTrackInstAkAudioRTPC.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UInterpTrackInstAkAudioRTPC(Z_Construct_UClass_UInterpTrackInstAkAudioRTPC, &UInterpTrackInstAkAudioRTPC::StaticClass, TEXT("UInterpTrackInstAkAudioRTPC"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UInterpTrackInstAkAudioRTPC);
	UClass* Z_Construct_UClass_UMovieSceneAkAudioEventSection_NoRegister()
	{
		return UMovieSceneAkAudioEventSection::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneAkAudioEventSection()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneSection();
			Z_Construct_UPackage__Script_AkAudio();
			OuterClass = UMovieSceneAkAudioEventSection::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_EventName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EventName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(EventName, UMovieSceneAkAudioEventSection), 0x0040040000000001);
				UProperty* NewProp_Event = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Event"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Event, UMovieSceneAkAudioEventSection), 0x0040000000000001, Z_Construct_UClass_UAkAudioEvent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MovieSceneAkAudioEventSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/MovieSceneAkAudioEventSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("A single floating point section"));
				MetaData->SetValue(NewProp_EventName, TEXT("Category"), TEXT("AkAudioEvent"));
				MetaData->SetValue(NewProp_EventName, TEXT("ModuleRelativePath"), TEXT("Classes/MovieSceneAkAudioEventSection.h"));
				MetaData->SetValue(NewProp_EventName, TEXT("ToolTip"), TEXT("The name of the AkAudioEvent represented by this section"));
				MetaData->SetValue(NewProp_Event, TEXT("Category"), TEXT("AkAudioEvent"));
				MetaData->SetValue(NewProp_Event, TEXT("ModuleRelativePath"), TEXT("Classes/MovieSceneAkAudioEventSection.h"));
				MetaData->SetValue(NewProp_Event, TEXT("ToolTip"), TEXT("The AkAudioEvent represented by this section"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneAkAudioEventSection(Z_Construct_UClass_UMovieSceneAkAudioEventSection, &UMovieSceneAkAudioEventSection::StaticClass, TEXT("UMovieSceneAkAudioEventSection"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneAkAudioEventSection);
	UClass* Z_Construct_UClass_UMovieSceneAkAudioRTPCSection_NoRegister()
	{
		return UMovieSceneAkAudioRTPCSection::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneAkAudioRTPCSection()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneSection();
			Z_Construct_UPackage__Script_AkAudio();
			OuterClass = UMovieSceneAkAudioRTPCSection::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_FloatCurve = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FloatCurve"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FloatCurve, UMovieSceneAkAudioRTPCSection), 0x0020080000000000, Z_Construct_UScriptStruct_FRichCurve());
				UProperty* NewProp_Name = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Name, UMovieSceneAkAudioRTPCSection), 0x0020080000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MovieSceneAkAudioRTPCSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/MovieSceneAkAudioRTPCSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("A single floating point section"));
				MetaData->SetValue(NewProp_FloatCurve, TEXT("ModuleRelativePath"), TEXT("Classes/MovieSceneAkAudioRTPCSection.h"));
				MetaData->SetValue(NewProp_FloatCurve, TEXT("ToolTip"), TEXT("Curve data"));
				MetaData->SetValue(NewProp_Name, TEXT("Category"), TEXT("AkAudioRTPC"));
				MetaData->SetValue(NewProp_Name, TEXT("ModuleRelativePath"), TEXT("Classes/MovieSceneAkAudioRTPCSection.h"));
				MetaData->SetValue(NewProp_Name, TEXT("ToolTip"), TEXT("Name of the RTPC to modify."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneAkAudioRTPCSection(Z_Construct_UClass_UMovieSceneAkAudioRTPCSection, &UMovieSceneAkAudioRTPCSection::StaticClass, TEXT("UMovieSceneAkAudioRTPCSection"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneAkAudioRTPCSection);
	UClass* Z_Construct_UClass_UMovieSceneAkTrack_NoRegister()
	{
		return UMovieSceneAkTrack::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneAkTrack()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneTrack();
			Z_Construct_UPackage__Script_AkAudio();
			OuterClass = UMovieSceneAkTrack::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080081;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsAMasterTrack, UMovieSceneAkTrack, uint8);
				UProperty* NewProp_bIsAMasterTrack = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsAMasterTrack"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsAMasterTrack, UMovieSceneAkTrack), 0x0020080000000000, CPP_BOOL_PROPERTY_BITMASK(bIsAMasterTrack, UMovieSceneAkTrack), sizeof(uint8), false);
				UProperty* NewProp_Sections = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Sections"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Sections, UMovieSceneAkTrack), 0x0020080000000000);
				UProperty* NewProp_Sections_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Sections, TEXT("Sections"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UMovieSceneSection_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MovieSceneAkTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/MovieSceneAkTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Handles manipulation of an Ak track in a movie scene"));
				MetaData->SetValue(NewProp_bIsAMasterTrack, TEXT("ModuleRelativePath"), TEXT("Classes/MovieSceneAkTrack.h"));
				MetaData->SetValue(NewProp_Sections, TEXT("ModuleRelativePath"), TEXT("Classes/MovieSceneAkTrack.h"));
				MetaData->SetValue(NewProp_Sections, TEXT("ToolTip"), TEXT("All the sections in this track"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneAkTrack(Z_Construct_UClass_UMovieSceneAkTrack, &UMovieSceneAkTrack::StaticClass, TEXT("UMovieSceneAkTrack"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneAkTrack);
	UClass* Z_Construct_UClass_UMovieSceneAkAudioEventTrack_NoRegister()
	{
		return UMovieSceneAkAudioEventTrack::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneAkAudioEventTrack()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneAkTrack();
			Z_Construct_UPackage__Script_AkAudio();
			OuterClass = UMovieSceneAkAudioEventTrack::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bFireEventsWhenBackwards, UMovieSceneAkAudioEventTrack, uint8);
				UProperty* NewProp_bFireEventsWhenBackwards = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bFireEventsWhenBackwards"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bFireEventsWhenBackwards, UMovieSceneAkAudioEventTrack), 0x0020080000000001, CPP_BOOL_PROPERTY_BITMASK(bFireEventsWhenBackwards, UMovieSceneAkAudioEventTrack), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bFireEventsWhenForwards, UMovieSceneAkAudioEventTrack, uint8);
				UProperty* NewProp_bFireEventsWhenForwards = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bFireEventsWhenForwards"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bFireEventsWhenForwards, UMovieSceneAkAudioEventTrack), 0x0020080000000001, CPP_BOOL_PROPERTY_BITMASK(bFireEventsWhenForwards, UMovieSceneAkAudioEventTrack), sizeof(uint8), false);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MovieSceneAkAudioEventTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/MovieSceneAkAudioEventTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Handles manipulation of float properties in a movie scene"));
				MetaData->SetValue(NewProp_bFireEventsWhenBackwards, TEXT("Category"), TEXT("TrackEvent"));
				MetaData->SetValue(NewProp_bFireEventsWhenBackwards, TEXT("ModuleRelativePath"), TEXT("Classes/MovieSceneAkAudioEventTrack.h"));
				MetaData->SetValue(NewProp_bFireEventsWhenBackwards, TEXT("ToolTip"), TEXT("If events should be fired when passed playing the sequence backwards."));
				MetaData->SetValue(NewProp_bFireEventsWhenForwards, TEXT("Category"), TEXT("TrackEvent"));
				MetaData->SetValue(NewProp_bFireEventsWhenForwards, TEXT("ModuleRelativePath"), TEXT("Classes/MovieSceneAkAudioEventTrack.h"));
				MetaData->SetValue(NewProp_bFireEventsWhenForwards, TEXT("ToolTip"), TEXT("If events should be fired when passed playing the sequence forwards."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneAkAudioEventTrack(Z_Construct_UClass_UMovieSceneAkAudioEventTrack, &UMovieSceneAkAudioEventTrack::StaticClass, TEXT("UMovieSceneAkAudioEventTrack"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneAkAudioEventTrack);
	UClass* Z_Construct_UClass_UMovieSceneAkAudioRTPCTrack_NoRegister()
	{
		return UMovieSceneAkAudioRTPCTrack::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneAkAudioRTPCTrack()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneAkTrack();
			Z_Construct_UPackage__Script_AkAudio();
			OuterClass = UMovieSceneAkAudioRTPCTrack::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MovieSceneAkAudioRTPCTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/MovieSceneAkAudioRTPCTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Handles manipulation of float properties in a movie scene"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneAkAudioRTPCTrack(Z_Construct_UClass_UMovieSceneAkAudioRTPCTrack, &UMovieSceneAkAudioRTPCTrack::StaticClass, TEXT("UMovieSceneAkAudioRTPCTrack"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneAkAudioRTPCTrack);
	UPackage* Z_Construct_UPackage__Script_AkAudio()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/AkAudio")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x6847A397;
			Guid.B = 0x199E7F9E;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
